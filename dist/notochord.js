/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/core.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Song/Measure.js":
/*!*****************************!*\
  !*** ./src/Song/Measure.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Measure; });\n/**\n * Represents a measure of music.\n * @class\n * @param {Song} song The song the Measure belongs to.\n * @param {?Number} index Optional: index at which to insert measure.\n * @param {Object} pseudoMeasure Optional: pseudo-measure object to parse.\n */\nfunction Measure(song, index, pseudoMeasure) {  \n  this.length = song.timeSignature[0];\n  \n  this.attributes = {\n    repeatStart: false,\n    repeatEnd: false,\n    ending: null,\n    maxRepeats: 0\n  };\n  \n  var getShortest = function (left, right) {\n    return left.length <= right.length ? left : right;\n  };\n  \n  /**\n   * Parse a string into a chord and save it to the specified beat index.\n   * @param {String} chord The chord to parse.\n   * @param {Number} index The beat in the measure to replace.\n   * @param {Boolean} [transpose=false] Whether to correct for transposition.\n   */\n  this.parseChordToBeat = function(chord, index, transpose = false) {\n    var parsed;\n    if(chord) {\n      parsed = chord.replace(/-/g, 'm');\n      var chordParts = Tonal.Chord.tokenize(parsed);\n      if(transpose && song.transpose) {\n        chordParts[0] = Tonal.Note.enharmonic(\n          Tonal.transpose(\n            chordParts[0],\n            Tonal.Interval.invert(song.transposeInt)\n          )\n        );\n      }\n      \n      // get the shortest chord name\n      if(chordParts[1]) {\n        let names = Tonal.Chord.props(chordParts[1]).names;\n        chordParts[1] = names.reduce(getShortest).replace(/_/g, 'm7');\n      }\n      parsed = chordParts.join('');\n    } else {\n      parsed = null;\n    }\n    this._beats[index] = parsed;\n  };\n  \n  {\n    /**\n     * Array containing timeSignature[0] chord strings or nulls.\n     * @type {?Object[]}\n     * @private\n     */\n    this._beats = new Array(this.length).fill(null);\n    let i = 0;\n    var chords;\n    if(pseudoMeasure) {\n      chords = pseudoMeasure.beats;\n      if(pseudoMeasure.repeatStart) {\n        this.attributes['repeatStart'] = pseudoMeasure.repeatStart;\n      }\n      if(pseudoMeasure.repeatEnd) {\n        this.attributes['repeatEnd'] = pseudoMeasure.repeatEnd;\n      }\n      if(pseudoMeasure.ending !== undefined) {\n        this.attributes['ending'] = pseudoMeasure.ending;\n      }\n      if(pseudoMeasure.maxRepeats !== undefined) {\n        this.attributes['maxRepeats'] = pseudoMeasure.maxRepeats;\n      }\n    } else {\n      chords = [];\n    }\n    for(let chord of chords) this.parseChordToBeat(chord, i++);\n    \n  }\n  \n  const SCALE_DEGREES = {\n    1: {numeral: 'i', flat: false},\n    2: {numeral: 'ii', flat: true},\n    3: {numeral: 'ii', flat: false},\n    4: {numeral: 'iii', flat: true},\n    5: {numeral: 'iii', flat: false},\n    6: {numeral: 'iv', flat: false},\n    7: {numeral: 'v', flat: true},\n    8: {numeral: 'v', flat: false},\n    9: {numeral: 'vi', flat: true},\n    10: {numeral: 'vi', flat: false},\n    11: {numeral: 'vii', flat: true},\n    12: {numeral: 'vii', flat: false}\n  };\n  \n  /* @todo docs */\n  this.getScaleDegree = function(beat) {\n    var chord = this._beats[beat];\n    if(!chord) return null;\n    \n    var semis = Tonal.Distance.semitones(\n      song.key,\n      chord.root) + 1;\n    var caps = chord.quality == 'Major' || chord.quality == 'Augmented';\n    var sd = SCALE_DEGREES[semis];\n    var out = {\n      flat: sd.flat\n    };\n    if(caps) {\n      out.numeral = sd.numeral.toUpperCase();\n    } else {\n      out.numeral = sd.numeral;\n    }\n    return out;\n  };\n  \n  /* @todo docs */\n  this.getBeat = function(beat) {\n    var transpose = song.transpose;\n    var chord = this._beats[beat];\n    if(chord) {\n      if(transpose) {\n        let chordParts = Tonal.Chord.tokenize(chord);\n        chordParts[0] = Tonal.Note.enharmonic(\n          Tonal.transpose(chordParts[0], song.transposeInt)\n        );\n        return chordParts.join('');\n      } else {\n        return chord;\n      }\n    } else {\n      return null;\n    }\n  };\n  \n  /**\n   * Set/change the location of the measure in the song.\n   * @param {Number} _index New index.\n   * @public\n   */\n  this.setIndex = function(_index) {\n    var currentIndex = song.measures.indexOf(this);\n    if(currentIndex != -1) {\n      song.measures.splice(currentIndex, 1);\n    }\n    if(_index > currentIndex) {\n      song.measures.splice(_index - 1, 0, this);\n    } else {\n      song.measures.splice(_index, 0, this);\n    }\n  };\n  \n  if(index === null) {\n    song.measures.push(this);\n  } else {\n    this.setIndex(index);\n  }\n  \n  /**\n   * Get the measure's index in the piece\n   * @returns {Number} the measure's index in the piece.\n   * @public\n   */\n  this.getIndex = function() {\n    return song.measures.indexOf(this);\n  };\n  \n  // @todo docs\n  this.getNextMeasure = function() {\n    var newIndex = this.getIndex() + 1;\n    return song.measures[newIndex] || null;\n  };\n  this.getPreviousMeasure = function() {\n    var newIndex = this.getIndex() - 1;\n    return song.measures[newIndex] || null;\n  };\n  \n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Song/Measure.js\n");

/***/ }),

/***/ "./src/Song/Song.js":
/*!**************************!*\
  !*** ./src/Song/Song.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Song; });\n/* harmony import */ var _Measure_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Measure.js */ \"./src/Song/Measure.js\");\n\n\n/**\n * Parse a song from an Object.\n * @param {Object} songData The song to load.\n * @param {String} [songData.title] Title of the song.\n * @param {String} [songData.composer] Composer of the song.\n * @param {Number[]} [songData.timeSignature] Time Signature of the song, an\n * Array of 2 integers.\n * @param {String} [songData.key] Original key of the song.\n * @param {Number|String} [songData.transpose] Key to transpose to, or integer\n * of semitones to transpose by.\n * @param {Array.<null, Array>} songData.chords The chords array to parse.\n * @class\n * @public\n */\nfunction Song(songData) {\n  \n  /**\n   * A list of measures and nulls, in order. Null represents a newline.\n   * @type {?Measure[]}\n   * @public\n   */\n  this.measures = [];\n  \n  /**\n   * Append a measure to the piece\n   * @param {Object} measureToParse Pseudo-measure object to parse.\n   * @param {?Number} index Optional: Index for the new measure.\n   * @return {Measure} The generated measure.\n   * @public\n   */\n  this.addMeasure = function(measureToParse, index) {\n    return new _Measure_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, index, measureToParse);\n  };\n  \n  /**\n   * Change the transposition.\n   * @param {Number|String} transpose Key to transpose to, or integer of\n   * semitones to transpose by.\n   * @public\n   */\n  this.setTranspose = function(transpose) {\n    if(Number.isInteger(transpose)) {\n      this.transpose = transpose % 12;\n    } else {\n      let orig_chord = Tonal.Chord.tokenize(this.key);\n      let new_chord = Tonal.Chord.tokenize(transpose);\n      this.transpose = Tonal.Distance.semitones(\n        orig_chord[0],\n        new_chord[0]\n      );\n      this.transposeInt = Tonal.Interval.fromSemitones(this.transpose);\n      /*if(orig_chord.quality != new_chord.quality) {\n        // for example, if the song is in CM and user transposes to Am\n        // if you try to transpose to not Major/Minor I'll cry.\n        if(new_chord.quality == 'Minor') {\n          this.transpose = (this.transpose + 3) % 12;\n        } else {\n          this.transpose = (this.transpose - 3) % 12;\n        }\n      }*/\n    }\n  };\n  \n  /**\n   * Get the transposed key of the song.\n   * @returns {String} the transposed key.\n   * @public\n   */\n  this.getTransposedKey = function() {\n    return Tonal.Note.pc(\n      Tonal.transpose(this.key, Tonal.Interval.fromSemitones(this.transpose))\n    );\n  };\n  \n  /**\n   * Parse a song from an Array of pseudo-measure objects.\n   * @param {Array.<Object>} array The array to parse into a song.\n   * @public\n   */\n  this.parseMeasureArray = function(array) {\n    for(let measure of array) {\n      if(measure) {\n        this.addMeasure(measure, null);\n      }\n    }\n  };\n  \n  /**\n   * Title of the song.\n   * @type {String}\n   */\n  this.title = songData.title || '';\n  /**\n   * Composer of the song.\n   * @type {String}\n   */\n  this.composer = songData.composer || '';\n  /**\n   * Time signature of the song.\n   * @type {Number[]}\n   */\n  this.timeSignature = songData.timeSignature || [4,4];\n  /**\n   * Key of the song. A chord name.\n   * @type {String}\n   */\n  this.key = songData.key || 'C'; // stop judging me ok\n  /**\n   * Number of semitones to transpose by -- an integer mod 12.\n   * @type {Number}\n   */\n  this.transpose = 0;\n  \n  if(songData.transpose !== undefined) this.setTranspose(songData.transpose);\n  this.parseMeasureArray(songData.measures);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvU29uZy9Tb25nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL1NvbmcvU29uZy5qcz8xNDMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNZWFzdXJlIGZyb20gJy4vTWVhc3VyZS5qcyc7XG5cbi8qKlxuICogUGFyc2UgYSBzb25nIGZyb20gYW4gT2JqZWN0LlxuICogQHBhcmFtIHtPYmplY3R9IHNvbmdEYXRhIFRoZSBzb25nIHRvIGxvYWQuXG4gKiBAcGFyYW0ge1N0cmluZ30gW3NvbmdEYXRhLnRpdGxlXSBUaXRsZSBvZiB0aGUgc29uZy5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbc29uZ0RhdGEuY29tcG9zZXJdIENvbXBvc2VyIG9mIHRoZSBzb25nLlxuICogQHBhcmFtIHtOdW1iZXJbXX0gW3NvbmdEYXRhLnRpbWVTaWduYXR1cmVdIFRpbWUgU2lnbmF0dXJlIG9mIHRoZSBzb25nLCBhblxuICogQXJyYXkgb2YgMiBpbnRlZ2Vycy5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbc29uZ0RhdGEua2V5XSBPcmlnaW5hbCBrZXkgb2YgdGhlIHNvbmcuXG4gKiBAcGFyYW0ge051bWJlcnxTdHJpbmd9IFtzb25nRGF0YS50cmFuc3Bvc2VdIEtleSB0byB0cmFuc3Bvc2UgdG8sIG9yIGludGVnZXJcbiAqIG9mIHNlbWl0b25lcyB0byB0cmFuc3Bvc2UgYnkuXG4gKiBAcGFyYW0ge0FycmF5LjxudWxsLCBBcnJheT59IHNvbmdEYXRhLmNob3JkcyBUaGUgY2hvcmRzIGFycmF5IHRvIHBhcnNlLlxuICogQGNsYXNzXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNvbmcoc29uZ0RhdGEpIHtcbiAgXG4gIC8qKlxuICAgKiBBIGxpc3Qgb2YgbWVhc3VyZXMgYW5kIG51bGxzLCBpbiBvcmRlci4gTnVsbCByZXByZXNlbnRzIGEgbmV3bGluZS5cbiAgICogQHR5cGUgez9NZWFzdXJlW119XG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHRoaXMubWVhc3VyZXMgPSBbXTtcbiAgXG4gIC8qKlxuICAgKiBBcHBlbmQgYSBtZWFzdXJlIHRvIHRoZSBwaWVjZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbWVhc3VyZVRvUGFyc2UgUHNldWRvLW1lYXN1cmUgb2JqZWN0IHRvIHBhcnNlLlxuICAgKiBAcGFyYW0gez9OdW1iZXJ9IGluZGV4IE9wdGlvbmFsOiBJbmRleCBmb3IgdGhlIG5ldyBtZWFzdXJlLlxuICAgKiBAcmV0dXJuIHtNZWFzdXJlfSBUaGUgZ2VuZXJhdGVkIG1lYXN1cmUuXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHRoaXMuYWRkTWVhc3VyZSA9IGZ1bmN0aW9uKG1lYXN1cmVUb1BhcnNlLCBpbmRleCkge1xuICAgIHJldHVybiBuZXcgTWVhc3VyZSh0aGlzLCBpbmRleCwgbWVhc3VyZVRvUGFyc2UpO1xuICB9O1xuICBcbiAgLyoqXG4gICAqIENoYW5nZSB0aGUgdHJhbnNwb3NpdGlvbi5cbiAgICogQHBhcmFtIHtOdW1iZXJ8U3RyaW5nfSB0cmFuc3Bvc2UgS2V5IHRvIHRyYW5zcG9zZSB0bywgb3IgaW50ZWdlciBvZlxuICAgKiBzZW1pdG9uZXMgdG8gdHJhbnNwb3NlIGJ5LlxuICAgKiBAcHVibGljXG4gICAqL1xuICB0aGlzLnNldFRyYW5zcG9zZSA9IGZ1bmN0aW9uKHRyYW5zcG9zZSkge1xuICAgIGlmKE51bWJlci5pc0ludGVnZXIodHJhbnNwb3NlKSkge1xuICAgICAgdGhpcy50cmFuc3Bvc2UgPSB0cmFuc3Bvc2UgJSAxMjtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IG9yaWdfY2hvcmQgPSBUb25hbC5DaG9yZC50b2tlbml6ZSh0aGlzLmtleSk7XG4gICAgICBsZXQgbmV3X2Nob3JkID0gVG9uYWwuQ2hvcmQudG9rZW5pemUodHJhbnNwb3NlKTtcbiAgICAgIHRoaXMudHJhbnNwb3NlID0gVG9uYWwuRGlzdGFuY2Uuc2VtaXRvbmVzKFxuICAgICAgICBvcmlnX2Nob3JkWzBdLFxuICAgICAgICBuZXdfY2hvcmRbMF1cbiAgICAgICk7XG4gICAgICB0aGlzLnRyYW5zcG9zZUludCA9IFRvbmFsLkludGVydmFsLmZyb21TZW1pdG9uZXModGhpcy50cmFuc3Bvc2UpO1xuICAgICAgLyppZihvcmlnX2Nob3JkLnF1YWxpdHkgIT0gbmV3X2Nob3JkLnF1YWxpdHkpIHtcbiAgICAgICAgLy8gZm9yIGV4YW1wbGUsIGlmIHRoZSBzb25nIGlzIGluIENNIGFuZCB1c2VyIHRyYW5zcG9zZXMgdG8gQW1cbiAgICAgICAgLy8gaWYgeW91IHRyeSB0byB0cmFuc3Bvc2UgdG8gbm90IE1ham9yL01pbm9yIEknbGwgY3J5LlxuICAgICAgICBpZihuZXdfY2hvcmQucXVhbGl0eSA9PSAnTWlub3InKSB7XG4gICAgICAgICAgdGhpcy50cmFuc3Bvc2UgPSAodGhpcy50cmFuc3Bvc2UgKyAzKSAlIDEyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudHJhbnNwb3NlID0gKHRoaXMudHJhbnNwb3NlIC0gMykgJSAxMjtcbiAgICAgICAgfVxuICAgICAgfSovXG4gICAgfVxuICB9O1xuICBcbiAgLyoqXG4gICAqIEdldCB0aGUgdHJhbnNwb3NlZCBrZXkgb2YgdGhlIHNvbmcuXG4gICAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSB0cmFuc3Bvc2VkIGtleS5cbiAgICogQHB1YmxpY1xuICAgKi9cbiAgdGhpcy5nZXRUcmFuc3Bvc2VkS2V5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFRvbmFsLk5vdGUucGMoXG4gICAgICBUb25hbC50cmFuc3Bvc2UodGhpcy5rZXksIFRvbmFsLkludGVydmFsLmZyb21TZW1pdG9uZXModGhpcy50cmFuc3Bvc2UpKVxuICAgICk7XG4gIH07XG4gIFxuICAvKipcbiAgICogUGFyc2UgYSBzb25nIGZyb20gYW4gQXJyYXkgb2YgcHNldWRvLW1lYXN1cmUgb2JqZWN0cy5cbiAgICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gYXJyYXkgVGhlIGFycmF5IHRvIHBhcnNlIGludG8gYSBzb25nLlxuICAgKiBAcHVibGljXG4gICAqL1xuICB0aGlzLnBhcnNlTWVhc3VyZUFycmF5ID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICBmb3IobGV0IG1lYXN1cmUgb2YgYXJyYXkpIHtcbiAgICAgIGlmKG1lYXN1cmUpIHtcbiAgICAgICAgdGhpcy5hZGRNZWFzdXJlKG1lYXN1cmUsIG51bGwpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgXG4gIC8qKlxuICAgKiBUaXRsZSBvZiB0aGUgc29uZy5cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIHRoaXMudGl0bGUgPSBzb25nRGF0YS50aXRsZSB8fCAnJztcbiAgLyoqXG4gICAqIENvbXBvc2VyIG9mIHRoZSBzb25nLlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKi9cbiAgdGhpcy5jb21wb3NlciA9IHNvbmdEYXRhLmNvbXBvc2VyIHx8ICcnO1xuICAvKipcbiAgICogVGltZSBzaWduYXR1cmUgb2YgdGhlIHNvbmcuXG4gICAqIEB0eXBlIHtOdW1iZXJbXX1cbiAgICovXG4gIHRoaXMudGltZVNpZ25hdHVyZSA9IHNvbmdEYXRhLnRpbWVTaWduYXR1cmUgfHwgWzQsNF07XG4gIC8qKlxuICAgKiBLZXkgb2YgdGhlIHNvbmcuIEEgY2hvcmQgbmFtZS5cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIHRoaXMua2V5ID0gc29uZ0RhdGEua2V5IHx8ICdDJzsgLy8gc3RvcCBqdWRnaW5nIG1lIG9rXG4gIC8qKlxuICAgKiBOdW1iZXIgb2Ygc2VtaXRvbmVzIHRvIHRyYW5zcG9zZSBieSAtLSBhbiBpbnRlZ2VyIG1vZCAxMi5cbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIHRoaXMudHJhbnNwb3NlID0gMDtcbiAgXG4gIGlmKHNvbmdEYXRhLnRyYW5zcG9zZSAhPT0gdW5kZWZpbmVkKSB0aGlzLnNldFRyYW5zcG9zZShzb25nRGF0YS50cmFuc3Bvc2UpO1xuICB0aGlzLnBhcnNlTWVhc3VyZUFycmF5KHNvbmdEYXRhLm1lYXN1cmVzKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Song/Song.js\n");

/***/ }),

/***/ "./src/core.js":
/*!*********************!*\
  !*** ./src/core.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events.js */ \"./src/events.js\");\n/* harmony import */ var _player_player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player/player.js */ \"./src/player/player.js\");\n/* harmony import */ var _viewer_viewer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewer/viewer.js */ \"./src/viewer/viewer.js\");\n/* harmony import */ var _Song_Song_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Song/Song.js */ \"./src/Song/Song.js\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function () {\n  var Notochord = {\n    events: _events_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    player: _player_player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    viewer: _viewer_viewer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    Song: _Song_Song_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n  };\n\n  Notochord.player.attachEvents(Notochord.events);\n  Notochord.viewer.attachEvents(Notochord.events);\n\n  // everything refers here to grab the current song\n  Notochord.currentSong = null;\n  Notochord.events.create('Notochord.load', false);\n\n  /**\n   * Load a Song object.\n   * @param {Song} song The Notochord.Song file to load.\n   */\n  Notochord.loadSong = function(song) {\n    Notochord.currentSong = song;\n    Notochord.player.loadSong(song);\n    Notochord.viewer.loadSong(song);\n    Notochord.events.dispatch('Notochord.load');\n  };\n\n  Notochord.events.create('Notochord.transpose', false);\n  Notochord.transpose = 0;\n  /**\n   * Change the transposition for the song. Transposition is saved with\n   * song data so that the next time you play the song it remembers your\n   * preferred key.\n   * @param {Number|String} transpose Key to transpose to, or integer of\n   * semitones to transpose by.\n   * @public\n   */\n  Notochord.setTranspose = function(transpose) {\n    if(Notochord.currentSong) {\n      Notochord.currentSong.setTranspose(transpose);\n      Notochord.events.dispatch('Notochord.transpose', {});\n    } else {\n      throw new Error('Song must be loaded before you call setTranspose.');\n    }\n  };\n  /**\n   * Set the tempo of the player style. Unlike setTranspose, this'll stop\n   * playback. That's because, if a playback style is poorly written,\n   * changing the tempo could unsync playback.\n   * @param {Number} tempo The new tempo.\n   * @public\n   */\n  Notochord.setTempo = function(tempo) {\n    Notochord.player.config({\n      tempo: tempo\n    });\n  };\n  \n  if(typeof window != 'undefined') window.Notochord = Notochord;\n  \n  return Notochord;\n})());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb3JlLmpzPzIwYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV2ZW50cyBmcm9tICcuL2V2ZW50cy5qcyc7XG5pbXBvcnQgcGxheWVyIGZyb20gJy4vcGxheWVyL3BsYXllci5qcyc7XG5pbXBvcnQgdmlld2VyIGZyb20gJy4vdmlld2VyL3ZpZXdlci5qcyc7XG5pbXBvcnQgU29uZyBmcm9tICcuL1NvbmcvU29uZy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoKSB7XG4gIHZhciBOb3RvY2hvcmQgPSB7XG4gICAgZXZlbnRzOiBldmVudHMsXG4gICAgcGxheWVyOiBwbGF5ZXIsXG4gICAgdmlld2VyOiB2aWV3ZXIsXG4gICAgU29uZzogU29uZ1xuICB9O1xuXG4gIE5vdG9jaG9yZC5wbGF5ZXIuYXR0YWNoRXZlbnRzKE5vdG9jaG9yZC5ldmVudHMpO1xuICBOb3RvY2hvcmQudmlld2VyLmF0dGFjaEV2ZW50cyhOb3RvY2hvcmQuZXZlbnRzKTtcblxuICAvLyBldmVyeXRoaW5nIHJlZmVycyBoZXJlIHRvIGdyYWIgdGhlIGN1cnJlbnQgc29uZ1xuICBOb3RvY2hvcmQuY3VycmVudFNvbmcgPSBudWxsO1xuICBOb3RvY2hvcmQuZXZlbnRzLmNyZWF0ZSgnTm90b2Nob3JkLmxvYWQnLCBmYWxzZSk7XG5cbiAgLyoqXG4gICAqIExvYWQgYSBTb25nIG9iamVjdC5cbiAgICogQHBhcmFtIHtTb25nfSBzb25nIFRoZSBOb3RvY2hvcmQuU29uZyBmaWxlIHRvIGxvYWQuXG4gICAqL1xuICBOb3RvY2hvcmQubG9hZFNvbmcgPSBmdW5jdGlvbihzb25nKSB7XG4gICAgTm90b2Nob3JkLmN1cnJlbnRTb25nID0gc29uZztcbiAgICBOb3RvY2hvcmQucGxheWVyLmxvYWRTb25nKHNvbmcpO1xuICAgIE5vdG9jaG9yZC52aWV3ZXIubG9hZFNvbmcoc29uZyk7XG4gICAgTm90b2Nob3JkLmV2ZW50cy5kaXNwYXRjaCgnTm90b2Nob3JkLmxvYWQnKTtcbiAgfTtcblxuICBOb3RvY2hvcmQuZXZlbnRzLmNyZWF0ZSgnTm90b2Nob3JkLnRyYW5zcG9zZScsIGZhbHNlKTtcbiAgTm90b2Nob3JkLnRyYW5zcG9zZSA9IDA7XG4gIC8qKlxuICAgKiBDaGFuZ2UgdGhlIHRyYW5zcG9zaXRpb24gZm9yIHRoZSBzb25nLiBUcmFuc3Bvc2l0aW9uIGlzIHNhdmVkIHdpdGhcbiAgICogc29uZyBkYXRhIHNvIHRoYXQgdGhlIG5leHQgdGltZSB5b3UgcGxheSB0aGUgc29uZyBpdCByZW1lbWJlcnMgeW91clxuICAgKiBwcmVmZXJyZWQga2V5LlxuICAgKiBAcGFyYW0ge051bWJlcnxTdHJpbmd9IHRyYW5zcG9zZSBLZXkgdG8gdHJhbnNwb3NlIHRvLCBvciBpbnRlZ2VyIG9mXG4gICAqIHNlbWl0b25lcyB0byB0cmFuc3Bvc2UgYnkuXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIE5vdG9jaG9yZC5zZXRUcmFuc3Bvc2UgPSBmdW5jdGlvbih0cmFuc3Bvc2UpIHtcbiAgICBpZihOb3RvY2hvcmQuY3VycmVudFNvbmcpIHtcbiAgICAgIE5vdG9jaG9yZC5jdXJyZW50U29uZy5zZXRUcmFuc3Bvc2UodHJhbnNwb3NlKTtcbiAgICAgIE5vdG9jaG9yZC5ldmVudHMuZGlzcGF0Y2goJ05vdG9jaG9yZC50cmFuc3Bvc2UnLCB7fSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU29uZyBtdXN0IGJlIGxvYWRlZCBiZWZvcmUgeW91IGNhbGwgc2V0VHJhbnNwb3NlLicpO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIFNldCB0aGUgdGVtcG8gb2YgdGhlIHBsYXllciBzdHlsZS4gVW5saWtlIHNldFRyYW5zcG9zZSwgdGhpcydsbCBzdG9wXG4gICAqIHBsYXliYWNrLiBUaGF0J3MgYmVjYXVzZSwgaWYgYSBwbGF5YmFjayBzdHlsZSBpcyBwb29ybHkgd3JpdHRlbixcbiAgICogY2hhbmdpbmcgdGhlIHRlbXBvIGNvdWxkIHVuc3luYyBwbGF5YmFjay5cbiAgICogQHBhcmFtIHtOdW1iZXJ9IHRlbXBvIFRoZSBuZXcgdGVtcG8uXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIE5vdG9jaG9yZC5zZXRUZW1wbyA9IGZ1bmN0aW9uKHRlbXBvKSB7XG4gICAgTm90b2Nob3JkLnBsYXllci5jb25maWcoe1xuICAgICAgdGVtcG86IHRlbXBvXG4gICAgfSk7XG4gIH07XG4gIFxuICBpZih0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnKSB3aW5kb3cuTm90b2Nob3JkID0gTm90b2Nob3JkO1xuICBcbiAgcmV0dXJuIE5vdG9jaG9yZDtcbn0pKCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core.js\n");

/***/ }),

/***/ "./src/events.js":
/*!***********************!*\
  !*** ./src/events.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function() {\n  // Attach everything public to this object, which is returned at the end.\n  var events = {};\n  \n  /*\n   * Event system to keep track of things\n   * Events take the form 'Measure.create' or 'Viewer.ready' etc.\n   */\n   \n  /**\n   * Database of Notochord events.\n   * @type {Object.<Object>}\n   * @private\n   */\n  events._eventsDB = {};\n  /**\n   * Register an Notochord event, if it doesn't already exist.\n   * @param {String} eventName Name of the event to register.\n   * @param {Boolean} oneTime If true, future functions added to the event run\n   * immediately.\n   * @returns {Object} Object that stores information about the event.\n   * @public\n   */\n  events.create = function(eventName, oneTime) {\n    if(!events._eventsDB[eventName]) {\n      events._eventsDB[eventName] = {\n        funcs: [], // array of Objects containing functions as well as config\n        //            info for each one.\n        dispatchCount: 0,\n        oneTime: oneTime,\n        args: {}\n      };\n    }\n    return events._eventsDB[eventName];\n  };\n  /**\n   * Add a function to run the next time the event is dispatched (or\n   * immediately if the event was oneTime)\n   * @param {String} eventName Name of event to fire on.\n   * @param {Function} func Function to run.\n   * @param {Boolean} [nextTimeOnly=false] If true, function only runs the\n   * next time the event is dispatched.\n   * @public\n   */\n  events.on = function(eventName, func, nextTimeOnly) {\n    var event = events._eventsDB[eventName];\n    if(!event) {\n      event = events.create(eventName, false);\n    }\n    if(event.oneTime && event.dispatchCount !== 0) {\n      // Pass it any arguments from the first run.\n      func(event.args);\n    } else {\n      event.funcs.push({\n        func: func,\n        nextTimeOnly: nextTimeOnly || false,\n        runCount: 0\n      });\n    }\n  };\n  /**\n   * Fire an event and run any functions linked to it.\n   * @param {String} eventName Event to dispatch.\n   * @param {Object} args Any arguments to pass to the functions.\n   * @return {Boolean} Whether an event eventName exists.\n   * @public\n   */\n  events.dispatch = function(eventName, args) {\n    var event = events._eventsDB[eventName];\n    if(!event) return false;\n    event.args = args;\n    for(let obj of event.funcs) {\n      if(obj.nextTimeOnly) {\n        if(obj.runCount === 0) {\n          obj.func(event.args);\n          obj.runCount++;\n        }\n      } else {\n        obj.func(event.args);\n        obj.runCount++;\n      }\n    }\n    return true;\n  };\n  return events;\n})());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXZlbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2V2ZW50cy5qcz8xNTY2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbigpIHtcbiAgLy8gQXR0YWNoIGV2ZXJ5dGhpbmcgcHVibGljIHRvIHRoaXMgb2JqZWN0LCB3aGljaCBpcyByZXR1cm5lZCBhdCB0aGUgZW5kLlxuICB2YXIgZXZlbnRzID0ge307XG4gIFxuICAvKlxuICAgKiBFdmVudCBzeXN0ZW0gdG8ga2VlcCB0cmFjayBvZiB0aGluZ3NcbiAgICogRXZlbnRzIHRha2UgdGhlIGZvcm0gJ01lYXN1cmUuY3JlYXRlJyBvciAnVmlld2VyLnJlYWR5JyBldGMuXG4gICAqL1xuICAgXG4gIC8qKlxuICAgKiBEYXRhYmFzZSBvZiBOb3RvY2hvcmQgZXZlbnRzLlxuICAgKiBAdHlwZSB7T2JqZWN0LjxPYmplY3Q+fVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZXZlbnRzLl9ldmVudHNEQiA9IHt9O1xuICAvKipcbiAgICogUmVnaXN0ZXIgYW4gTm90b2Nob3JkIGV2ZW50LCBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3QuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudE5hbWUgTmFtZSBvZiB0aGUgZXZlbnQgdG8gcmVnaXN0ZXIuXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gb25lVGltZSBJZiB0cnVlLCBmdXR1cmUgZnVuY3Rpb25zIGFkZGVkIHRvIHRoZSBldmVudCBydW5cbiAgICogaW1tZWRpYXRlbHkuXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IE9iamVjdCB0aGF0IHN0b3JlcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZXZlbnQuXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGV2ZW50cy5jcmVhdGUgPSBmdW5jdGlvbihldmVudE5hbWUsIG9uZVRpbWUpIHtcbiAgICBpZighZXZlbnRzLl9ldmVudHNEQltldmVudE5hbWVdKSB7XG4gICAgICBldmVudHMuX2V2ZW50c0RCW2V2ZW50TmFtZV0gPSB7XG4gICAgICAgIGZ1bmNzOiBbXSwgLy8gYXJyYXkgb2YgT2JqZWN0cyBjb250YWluaW5nIGZ1bmN0aW9ucyBhcyB3ZWxsIGFzIGNvbmZpZ1xuICAgICAgICAvLyAgICAgICAgICAgIGluZm8gZm9yIGVhY2ggb25lLlxuICAgICAgICBkaXNwYXRjaENvdW50OiAwLFxuICAgICAgICBvbmVUaW1lOiBvbmVUaW1lLFxuICAgICAgICBhcmdzOiB7fVxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGV2ZW50cy5fZXZlbnRzREJbZXZlbnROYW1lXTtcbiAgfTtcbiAgLyoqXG4gICAqIEFkZCBhIGZ1bmN0aW9uIHRvIHJ1biB0aGUgbmV4dCB0aW1lIHRoZSBldmVudCBpcyBkaXNwYXRjaGVkIChvclxuICAgKiBpbW1lZGlhdGVseSBpZiB0aGUgZXZlbnQgd2FzIG9uZVRpbWUpXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudE5hbWUgTmFtZSBvZiBldmVudCB0byBmaXJlIG9uLlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIEZ1bmN0aW9uIHRvIHJ1bi5cbiAgICogQHBhcmFtIHtCb29sZWFufSBbbmV4dFRpbWVPbmx5PWZhbHNlXSBJZiB0cnVlLCBmdW5jdGlvbiBvbmx5IHJ1bnMgdGhlXG4gICAqIG5leHQgdGltZSB0aGUgZXZlbnQgaXMgZGlzcGF0Y2hlZC5cbiAgICogQHB1YmxpY1xuICAgKi9cbiAgZXZlbnRzLm9uID0gZnVuY3Rpb24oZXZlbnROYW1lLCBmdW5jLCBuZXh0VGltZU9ubHkpIHtcbiAgICB2YXIgZXZlbnQgPSBldmVudHMuX2V2ZW50c0RCW2V2ZW50TmFtZV07XG4gICAgaWYoIWV2ZW50KSB7XG4gICAgICBldmVudCA9IGV2ZW50cy5jcmVhdGUoZXZlbnROYW1lLCBmYWxzZSk7XG4gICAgfVxuICAgIGlmKGV2ZW50Lm9uZVRpbWUgJiYgZXZlbnQuZGlzcGF0Y2hDb3VudCAhPT0gMCkge1xuICAgICAgLy8gUGFzcyBpdCBhbnkgYXJndW1lbnRzIGZyb20gdGhlIGZpcnN0IHJ1bi5cbiAgICAgIGZ1bmMoZXZlbnQuYXJncyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV2ZW50LmZ1bmNzLnB1c2goe1xuICAgICAgICBmdW5jOiBmdW5jLFxuICAgICAgICBuZXh0VGltZU9ubHk6IG5leHRUaW1lT25seSB8fCBmYWxzZSxcbiAgICAgICAgcnVuQ291bnQ6IDBcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIEZpcmUgYW4gZXZlbnQgYW5kIHJ1biBhbnkgZnVuY3Rpb25zIGxpbmtlZCB0byBpdC5cbiAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50TmFtZSBFdmVudCB0byBkaXNwYXRjaC5cbiAgICogQHBhcmFtIHtPYmplY3R9IGFyZ3MgQW55IGFyZ3VtZW50cyB0byBwYXNzIHRvIHRoZSBmdW5jdGlvbnMuXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59IFdoZXRoZXIgYW4gZXZlbnQgZXZlbnROYW1lIGV4aXN0cy5cbiAgICogQHB1YmxpY1xuICAgKi9cbiAgZXZlbnRzLmRpc3BhdGNoID0gZnVuY3Rpb24oZXZlbnROYW1lLCBhcmdzKSB7XG4gICAgdmFyIGV2ZW50ID0gZXZlbnRzLl9ldmVudHNEQltldmVudE5hbWVdO1xuICAgIGlmKCFldmVudCkgcmV0dXJuIGZhbHNlO1xuICAgIGV2ZW50LmFyZ3MgPSBhcmdzO1xuICAgIGZvcihsZXQgb2JqIG9mIGV2ZW50LmZ1bmNzKSB7XG4gICAgICBpZihvYmoubmV4dFRpbWVPbmx5KSB7XG4gICAgICAgIGlmKG9iai5ydW5Db3VudCA9PT0gMCkge1xuICAgICAgICAgIG9iai5mdW5jKGV2ZW50LmFyZ3MpO1xuICAgICAgICAgIG9iai5ydW5Db3VudCsrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvYmouZnVuYyhldmVudC5hcmdzKTtcbiAgICAgICAgb2JqLnJ1bkNvdW50Kys7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuICByZXR1cm4gZXZlbnRzO1xufSkoKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/events.js\n");

/***/ }),

/***/ "./src/player/playback.js":
/*!********************************!*\
  !*** ./src/player/playback.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar events = null;\n\nvar playback = {};\n\n// Boilerplate to connect this to a Notochord.\nplayback.attachEvents = function(ev) {\n  events = ev;\n};\n\nplayback.ready = false;\nplayback.tonal = Tonal;\nplayback.measureNumber = 0;\nplayback.measure = null;\nplayback.beat = 1;\nplayback.repeatStack = [];\nplayback.playing = false;\nplayback.tempo = 120; // Player should set these 3 before playing.\nplayback.song = null;\nplayback.beatLength = 500;\nplayback.AudioContext = new AudioContext();\n// an array containing data about all scheduled tasks yet to come.\nvar scheduled = [];\n// @todo docs\n// this one is absolute timing in the measure\nplayback.schedule = function(func, durations, force) {\n  if (typeof durations == 'number') durations = [durations];\n  if(playback.style.swing) durations = durations.map(playback.swing);\n  var relativeDurations = durations.map(d => d - playback.beat);\n  playback.scheduleRelative(func, relativeDurations, force);\n};\n/**\n * Perform an action in a certain number of beats.\n * @param {Function} func Function to run.\n * @param {Number|Number[]} durations Array of numbers of beats to wait to\n * run func.\n * @param {Boolean} [force=false] By default, won't run if playback.playing\n * is false at the specified time. Setting this to true ignres that.\n */\nplayback.scheduleRelative = function(func, durations, force) {\n  if (typeof durations == 'number') durations = [durations];\n  for(let dur of durations) {\n    if(dur === 0) { // if duration is 0, run immediately.\n      if(playback.playing || force) func();\n    } else {\n      let timeoutObj;\n      let timeout = setTimeout(() => {\n        if(playback.playing || force) func();\n        \n        let index = scheduled.indexOf(timeoutObj);\n        if(index != -1) scheduled.splice(index, 1);\n      }, dur * playback.beatLength);\n      timeoutObj = {\n        timeout: timeout,\n        func: func,\n        force: force\n      };\n      scheduled.push(timeoutObj);\n      // @todo swing?\n    }\n  }\n};\n/**\n * Resets all counters and things as if sarting from beginning of song.\n */\nplayback.reset = function() {\n  playback.measureNumber = 0;\n  playback.measureInPhrase = 0;\n  playback.beat = 1;\n  playback.measure = playback.song.measures[0];\n  playback.repeatStack = [\n    {\n      repeatCount: 0,\n      maxRepeats: 1,\n      startMeasure: playback.measure\n    }\n  ];\n};\n/**\n * Stops playback.\n * @public\n */\nplayback.stop = function() {\n  playback.playing = false;\n  \n  // Cancel (or in some cases immediately run) all scheduled tasks.\n  while(scheduled.length) {\n    let timeoutObj = scheduled.pop();\n    clearTimeout(timeoutObj.timeout);\n    if(timeoutObj.force) timeoutObj.func();\n  }\n};\n\n/**\n * Fills playback.beats with an array of beat array-like objects, which\n * consist of a \"name\" property for the original chord name, and numbered\n * entires for the nites in the chord.\n * @private\n */\nvar getBeats = function() { // @todo docs\n  playback.beats = [ null ]; // First item is null so it can be 1-indexed.\n  for(let i = 0; i < playback.measure.length; i++) {\n    let beat = playback.measure.getBeat(i);\n    if(beat) {\n      let beatObj = playback.tonal.Chord.notes(beat).slice();\n      beatObj['name'] = beat;\n      playback.beats.push(beatObj);\n    } else {\n      playback.beats.push(null);\n    }\n  }\n};\nplayback.play = function() {\n  playback.playing = true;\n  playback.beatLength = (60 * 1000) / playback.tempo;\n  var signature = playback.song.timeSignature[0];\n  var sigArray = Array(signature - 1).fill().map((x,i)=>i + 1);\n  var onMeasure = function() {\n    if(!playback.measure) playback.playing = false;\n    if(!playback.playing) return;\n    \n    playback.beat = 1;\n    getBeats();\n    if(playback.style.onMeasure) playback.style.onMeasure();\n    \n    var onBeat = function() {\n      if(!playback.playing) return;\n      playback.restsAfter = playback.getRestsAfter(playback.beat);\n      playback.highlightCurrentBeat();\n      if(playback.style.onBeat) playback.style.onBeat();\n    };\n    onBeat();\n    playback.scheduleRelative(() => {\n      playback.nextBeat();\n      onBeat();\n    }, sigArray);\n    playback.scheduleRelative(() => {\n      playback.nextMeasure();\n      onMeasure();\n    }, signature);\n  };\n  onMeasure();\n};\n/**\n * If there's a beat in the viewer, highlight it for its duration.\n * @private\n */\nplayback.highlightCurrentBeat = function() {\n  if(events) {\n    var args = {\n      measure: playback.measureNumber,\n      beat: playback.beat - 1\n    };\n    events.dispatch('Player.playBeat', args);\n    playback.scheduleRelative(() => {\n      events.dispatch('Player.stopBeat', args);\n    }, playback.restsAfter, true); // force unhighlight after playback stops\n  }\n};\nplayback.instruments = new Map();\n/**\n * Load the required instruments for a given style.\n * @param {Object} style A playback style object.\n * @private\n */\nplayback.setStyle = function(style) {\n  // Avoid loading the same plugin twice.\n  let loadingInstruments = style.requireInstruments\n    .filter(name => !playback.instruments.has(name))\n    .map(name => {\n      if(name == 'percussion') {\n        // eslint-disable-next-line max-len\n        let url = 'https://notochord.github.io/percussion-soundfont.js/percussion-mp3.js';\n        return Soundfont.instrument(playback.AudioContext, name, {\n          // Soundfont has a bug where you can't just pass it a URL like the\n          // docs say you can. :/\n          // @TODO: open an issue there\n          isSoundfontUrl: () => true,\n          nameToUrl: () => url\n        });\n      } else {\n        return Soundfont.instrument(playback.AudioContext, name);\n      }\n    });\n  Promise\n    .all(loadingInstruments)\n    .then(instrumentObjects => {\n      instrumentObjects.forEach(instrument => {\n        playback.instruments.set(instrument.name, instrument);\n      });\n      playback.style = style;\n      playback.ready = true;\n      events && events.dispatch('Player.loadStyle', {});\n    });\n};\nplayback.drumNames = new Map();\nfetch('https://notochord.github.io/percussion-soundfont.js/drums.json')\n  .then(res => res.json())\n  .then(drums => {\n    // flip it inside-out\n    for(let id in drums) {\n      playback.drumNames.set(drums[id], id);\n    }\n  });\n/* @TODO: docs */\nplayback.drum = function(drumName, gain = 0.5) {\n  if(playback.drumNames.has(drumName)) {\n    let drumID = playback.drumNames.get(drumName);\n    if(playback.instruments.has('percussion')) {\n      playback.instruments.get('percussion').play(drumID, 0, {gain: gain});\n    } else {\n      throw new ReferenceError('Instrument \"percussion\" not loaded.');\n      /* @TODO: schedule drums if they're not available yet? This should\n       * never happen since styles can't run until their instruments are\n       * all loaded */\n       \n      /* unless the client calls this manually, which I don't want */\n    }\n  } else {\n    // eslint-disable-next-line max-len\n    throw new ReferenceError(`No drum with name ${drumName}. See https://notochord.github.io/percussion-soundfont.js/drums.json for available names.`);\n  }\n};\n\n{\n  playback.swingRatio = (2/3);\n  let swingRatio1 = playback.swingRatio / 0.5;\n  let swingRatio2 = (1 - playback.swingRatio) / 0.5;\n  playback.swing = function(origTime) {\n    var wholeBeats = Math.floor(origTime);\n    var remainder = origTime - wholeBeats;\n    var out = wholeBeats;\n    if(remainder >= 0.5) {\n      out += playback.swingRatio;\n      let whatsLeft = remainder - 0.5;\n      out += whatsLeft * swingRatio2;\n      if(remainder > 0.5) out -= 0.01; \n    } else {\n      out += remainder * swingRatio1;\n    }\n    return out;\n  };\n}\n\n\n\n\n/**\n * Put a note, array of notes, or beat object into a specific octave.\n * @param {String|Array} beat A note, array of notes, or beat object to put\n * into the selected octave.\n * @param {Number} octave to put the notes in.\n * @param {Boolean} [pianist = false] If true, potentially drop below the\n * given octave to duplicate how a pianist might invert the chord.\n * @returns {Array} Notes in the given octave.\n */\nplayback.octave = function(beat, octave, pianist = false) {\n  if(typeof beat == 'string') beat = [beat];\n  if(pianist) {\n    let root = beat[0];\n    var key = playback.song.getTransposedKey();\n    var semitonesFromKey = playback.tonal.Distance.semitones(key, root);\n    var down = (semitonesFromKey >= 6);\n    if(down) octave -= 1;\n    var cToRoot = playback.tonal.Distance.semitones('C', root);\n    var cToKey = playback.tonal.Distance.semitones('C', key);\n    if(cToRoot < cToKey) octave++;\n  }\n  \n  var prevSemitones = Infinity;\n  var notesInOctaves = beat.map(note => {\n    let semitones = playback.tonal.Distance.semitones(note, 'C');\n    if(semitones == 0) semitones = 12;\n    if(semitones > prevSemitones) {\n      octave++;\n    }\n    prevSemitones = semitones;\n    return note + octave;\n  });\n  return notesInOctaves;\n  \n};\n\n/**\n * Get the number of beats of rest left in the measure after (and including)\n * a given beat.\n * @param {Number} current Current beat.\n * @returns {Number} Number of beats of rest left, plus one.\n * @private\n */\nplayback.getRestsAfter = function(current) {\n  var measure = playback.song.measures[playback.measureNumber];\n  if(measure) {\n    let count = 1;\n    for(let i = current + 1; i < measure.length; i++) {\n      if(measure.getBeat(i - 1)) {\n        return count;\n      } else {\n        count++;\n      }\n    }\n    return measure.length - current + 1;\n  } else {\n    return 0;\n  }\n};\n// Which measure it is in a phrase of four measures.\nplayback.measureInPhrase = 0;\n/**\n * Update playback.measure object to next measure.\n * @private\n */\nplayback.nextMeasure = function() {\n  var skipToEnding = false;\n  var repeatData = playback.repeatStack[playback.repeatStack.length - 1];\n  if(repeatData && playback.measure.attributes['ending'] !== null) {\n    let ending = playback.measure.attributes['ending'];\n    if(repeatData.repeatCount != ending - 1) {\n      skipToEnding = true;\n      playback.measure = repeatData.endMeasure.getNextMeasure();\n    }\n  }\n  if(!skipToEnding) {\n    if(repeatData && playback.measure.attributes['repeatEnd']) {\n      if(repeatData.repeatCount < repeatData.maxRepeats) {\n        repeatData.endMeasure = playback.measure;\n        playback.measure = repeatData.startMeasure;\n        repeatData.repeatCount++;\n      } else {\n        playback.repeatStack.pop();\n        playback.measure = playback.measure.getNextMeasure();\n      }\n    } else {\n      playback.measure = playback.measure.getNextMeasure();\n      \n      if(playback.measure && playback.measure.attributes['repeatStart']) {\n        playback.repeatStack.push({\n          repeatCount: 0,\n          maxRepeats: playback.measure.attributes['maxRepeats'],\n          startMeasure: playback.measure,\n          endMeasure: null\n        });\n      }\n    }\n  }\n  \n  if(playback.measure) {\n    playback.measureNumber = playback.measure.getIndex();\n    \n    playback.measureInPhrase++;\n    if(playback.measureInPhrase == 4) playback.measureInPhrase = 0;\n  } else {\n    playback.playing = false;\n    playback.measureInPhrase = 0;\n  }\n};\n/**\n * \n */\nplayback.nextBeat = function() {\n  playback.beat++;\n  if(playback.beat > playback.measure.length) {\n    playback.beat = 1;\n  }\n};\n\n// @TODO: docs\nplayback.beatsToSecs = function(beats) {\n  return (60 / playback.tempo) * beats;\n};\n\n/**\n * Play a note or notes for a number of beats.\n * @param {Object} data Object with data about what to play.\n * @param {String|String[]} data.notes Note name[s] to play.\n * @param {String} data.instrument Instrument name to play notes on.\n * @param {Number} data.dur Number of beats to play the note for.\n * @param {Number} [data.velocity=100] Velocity (volume) 0-127.\n * @param {Boolean} [data.roll=false] If true, roll/arpeggiate notes.\n * @param {Number} [data.delay=0] Number of beats to wait before playing.\n */\nplayback.playNotes = function(data) {\n  if(typeof data.notes == 'string') data.notes = [data.notes];\n  var notesAsNums = data.notes.map(playback.tonal.Note.midi);\n  \n  if(!data.velocity) data.velocity = 100;\n  let gain = data.velocity / 127;\n  \n  let durSecs = playback.beatsToSecs(data.dur);\n  \n  var instrument = playback.instruments.get(data.instrument);\n  if(!instrument) {\n    // eslint-disable-next-line max-len\n    throw new ReferenceError(`Instrument \"${data.instrument}\" not loaded. Put it in your requireInstruments.`);\n  }\n  let rollIncr = data.roll ? playback.beatsToSecs(0.05) : 0;\n  let totalDelay = data.delay || 0;\n  for(let note of notesAsNums) {\n    instrument.play(note, totalDelay, {\n      gain: gain,\n      duration: durSecs - totalDelay\n    });\n    totalDelay += rollIncr;\n  }\n};\n/**\n * Schedule an array of note data.\n * @param {Object} input Object to pass in actual parameters.\n * @param {String} input.instrument Instrument to use.\n * @param {Number} [data.velocity] Velocity (volume) 0-127.\n * @param {Object[]} input.data Array of objects describing notes to play at\n * different times.\n * @param {Number|Number[]} input.data[].times What beat[s] to play on.\n * @param {Number} input.data[].dur How many beats to play the notes for.\n * @param {String|String[]} input.data[].notes Note name[s] to play.\n */\nplayback.scheduleNotes = function(input) {\n  for(let set of input.data) {\n    playback.schedule(() => {\n      playback.playNotes({\n        notes: set.notes,\n        instrument: input.instrument,\n        dur: set.dur\n      });\n    }, set.times);\n  }\n};\n/**\n * Takes an array and returns a random item from it.\n * @param {Array} arr Items to choose from.\n * @returns {*} One of the items of the array.\n */\nplayback.randomFrom = function(arr) {\n  var idx = Math.floor(Math.random() * arr.length);\n  return arr[idx];\n};\n\n// https://stackoverflow.com/a/2450976/1784306\nplayback.shuffle = function(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (playback);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/player/playback.js\n");

/***/ }),

/***/ "./src/player/player.js":
/*!******************************!*\
  !*** ./src/player/player.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _playback_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./playback.js */ \"./src/player/playback.js\");\n/* harmony import */ var _styles_basic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/basic.js */ \"./src/player/styles/basic.js\");\n/* harmony import */ var _styles_samba_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles/samba.js */ \"./src/player/styles/samba.js\");\n/* harmony import */ var _styles_swing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styles/swing.js */ \"./src/player/styles/swing.js\");\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function() {\n  // Attach everything public to this object, which is returned at the end.\n  var player = {};\n  \n  var events = null;\n  /**\n   * Attach events object so player module can communicate with the others.\n   * @param {Object} ev Notochord events system.\n   */\n  player.attachEvents = function(ev) {\n    events = ev;\n    events.create('Player.loadStyle', true);\n    events.create('Player.playBeat', false);\n    events.create('Player.play', false);\n    events.create('Player.stopBeat', false);\n    events.on('Editor.setSelectedBeat', _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stop);\n    _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachEvents(ev);\n  };\n  \n  /**\n   * Publicly available list of playback styles.\n   * @public\n   */\n  player.styles = new Map();\n  player.styles.set('basic', Object(_styles_basic_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]));\n  player.styles.set('samba', Object(_styles_samba_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]));\n  player.styles.set('swing', Object(_styles_swing_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]));\n  // @TODO: supply different styles based on time signature\n  \n  /**\n   * Set the player's style\n   * @param {String|Object} newStyle Either the name or of a playback style or\n   * the style object itself.\n   */\n  player.setStyle = function(newStyle) {\n    _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ready = false;\n    _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stop();\n    var style;\n    if(typeof newStyle == 'string') {\n      // At one point this line read \"style = styles[_style].style\".\n      style = player.styles.get(newStyle);\n      if(!style) {\n        throw new ReferenceError(`Could not load style \"${newStyle}\"`);\n      }\n    } else {\n      style = newStyle;\n    }\n    _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setStyle(style);\n  };\n  player.setStyle('samba'); // Default to samba for rn\n  \n  \n  /**\n   * Load a song.\n   * @param {Song} song Song to load.\n   * @public\n   */\n  player.loadSong = function(song) {\n    _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].song = song;\n  };\n  \n  // Count number of times player.play has failed (since last success). If\n  // it's more than like 10 then give up and complain.\n  var failCount = 0;\n  \n  /**\n   * Play the song from the beginning.\n   * @public\n   */\n  player.play = function() {\n    if(_playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ready) {\n      failCount = 0;\n      _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AudioContext.resume();\n      _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stop();\n      _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reset();\n      if(events) events.dispatch('Player.play', {});\n      _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].play();\n    } else if(events) {\n      events.on('Player.loadStyle', player.play, true);\n    } else if(failCount < 10) {\n      setTimeout(player.play, 200);\n      failCount++;\n    } else {\n      // @todo ok so how are we logging things? eslint says no console\n    }\n  };\n  \n  /**\n   * Stop playing the Notochord.\n   * @public\n   */\n  player.stop = _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stop;\n  \n  /**\n   * Configure the player.\n   * @param {Object} [options] Optional: options for the Player.\n   * @param {Number} [options.tempo=120] Tempo for the player.\n   * @public\n   */\n  player.config = function(options) {\n    player.stop();\n    _playback_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tempo = (options && options.tempo) || 120;\n  };\n  player.config();\n  \n  return player;\n})());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyL3BsYXllci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9wbGF5ZXIvcGxheWVyLmpzPzRiYjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBsYXliYWNrIGZyb20gJy4vcGxheWJhY2suanMnO1xuXG5pbXBvcnQgc3R5bGVfYmFzaWMgZnJvbSAnLi9zdHlsZXMvYmFzaWMuanMnO1xuaW1wb3J0IHN0eWxlX3NhbWJhIGZyb20gJy4vc3R5bGVzL3NhbWJhLmpzJztcbmltcG9ydCBzdHlsZV9zd2luZyBmcm9tICcuL3N0eWxlcy9zd2luZy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbigpIHtcbiAgLy8gQXR0YWNoIGV2ZXJ5dGhpbmcgcHVibGljIHRvIHRoaXMgb2JqZWN0LCB3aGljaCBpcyByZXR1cm5lZCBhdCB0aGUgZW5kLlxuICB2YXIgcGxheWVyID0ge307XG4gIFxuICB2YXIgZXZlbnRzID0gbnVsbDtcbiAgLyoqXG4gICAqIEF0dGFjaCBldmVudHMgb2JqZWN0IHNvIHBsYXllciBtb2R1bGUgY2FuIGNvbW11bmljYXRlIHdpdGggdGhlIG90aGVycy5cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2IE5vdG9jaG9yZCBldmVudHMgc3lzdGVtLlxuICAgKi9cbiAgcGxheWVyLmF0dGFjaEV2ZW50cyA9IGZ1bmN0aW9uKGV2KSB7XG4gICAgZXZlbnRzID0gZXY7XG4gICAgZXZlbnRzLmNyZWF0ZSgnUGxheWVyLmxvYWRTdHlsZScsIHRydWUpO1xuICAgIGV2ZW50cy5jcmVhdGUoJ1BsYXllci5wbGF5QmVhdCcsIGZhbHNlKTtcbiAgICBldmVudHMuY3JlYXRlKCdQbGF5ZXIucGxheScsIGZhbHNlKTtcbiAgICBldmVudHMuY3JlYXRlKCdQbGF5ZXIuc3RvcEJlYXQnLCBmYWxzZSk7XG4gICAgZXZlbnRzLm9uKCdFZGl0b3Iuc2V0U2VsZWN0ZWRCZWF0JywgcGxheWJhY2suc3RvcCk7XG4gICAgcGxheWJhY2suYXR0YWNoRXZlbnRzKGV2KTtcbiAgfTtcbiAgXG4gIC8qKlxuICAgKiBQdWJsaWNseSBhdmFpbGFibGUgbGlzdCBvZiBwbGF5YmFjayBzdHlsZXMuXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHBsYXllci5zdHlsZXMgPSBuZXcgTWFwKCk7XG4gIHBsYXllci5zdHlsZXMuc2V0KCdiYXNpYycsIHN0eWxlX2Jhc2ljKHBsYXliYWNrKSk7XG4gIHBsYXllci5zdHlsZXMuc2V0KCdzYW1iYScsIHN0eWxlX3NhbWJhKHBsYXliYWNrKSk7XG4gIHBsYXllci5zdHlsZXMuc2V0KCdzd2luZycsIHN0eWxlX3N3aW5nKHBsYXliYWNrKSk7XG4gIC8vIEBUT0RPOiBzdXBwbHkgZGlmZmVyZW50IHN0eWxlcyBiYXNlZCBvbiB0aW1lIHNpZ25hdHVyZVxuICBcbiAgLyoqXG4gICAqIFNldCB0aGUgcGxheWVyJ3Mgc3R5bGVcbiAgICogQHBhcmFtIHtTdHJpbmd8T2JqZWN0fSBuZXdTdHlsZSBFaXRoZXIgdGhlIG5hbWUgb3Igb2YgYSBwbGF5YmFjayBzdHlsZSBvclxuICAgKiB0aGUgc3R5bGUgb2JqZWN0IGl0c2VsZi5cbiAgICovXG4gIHBsYXllci5zZXRTdHlsZSA9IGZ1bmN0aW9uKG5ld1N0eWxlKSB7XG4gICAgcGxheWJhY2sucmVhZHkgPSBmYWxzZTtcbiAgICBwbGF5YmFjay5zdG9wKCk7XG4gICAgdmFyIHN0eWxlO1xuICAgIGlmKHR5cGVvZiBuZXdTdHlsZSA9PSAnc3RyaW5nJykge1xuICAgICAgLy8gQXQgb25lIHBvaW50IHRoaXMgbGluZSByZWFkIFwic3R5bGUgPSBzdHlsZXNbX3N0eWxlXS5zdHlsZVwiLlxuICAgICAgc3R5bGUgPSBwbGF5ZXIuc3R5bGVzLmdldChuZXdTdHlsZSk7XG4gICAgICBpZighc3R5bGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKGBDb3VsZCBub3QgbG9hZCBzdHlsZSBcIiR7bmV3U3R5bGV9XCJgKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUgPSBuZXdTdHlsZTtcbiAgICB9XG4gICAgcGxheWJhY2suc2V0U3R5bGUoc3R5bGUpO1xuICB9O1xuICBwbGF5ZXIuc2V0U3R5bGUoJ3NhbWJhJyk7IC8vIERlZmF1bHQgdG8gc2FtYmEgZm9yIHJuXG4gIFxuICBcbiAgLyoqXG4gICAqIExvYWQgYSBzb25nLlxuICAgKiBAcGFyYW0ge1Nvbmd9IHNvbmcgU29uZyB0byBsb2FkLlxuICAgKiBAcHVibGljXG4gICAqL1xuICBwbGF5ZXIubG9hZFNvbmcgPSBmdW5jdGlvbihzb25nKSB7XG4gICAgcGxheWJhY2suc29uZyA9IHNvbmc7XG4gIH07XG4gIFxuICAvLyBDb3VudCBudW1iZXIgb2YgdGltZXMgcGxheWVyLnBsYXkgaGFzIGZhaWxlZCAoc2luY2UgbGFzdCBzdWNjZXNzKS4gSWZcbiAgLy8gaXQncyBtb3JlIHRoYW4gbGlrZSAxMCB0aGVuIGdpdmUgdXAgYW5kIGNvbXBsYWluLlxuICB2YXIgZmFpbENvdW50ID0gMDtcbiAgXG4gIC8qKlxuICAgKiBQbGF5IHRoZSBzb25nIGZyb20gdGhlIGJlZ2lubmluZy5cbiAgICogQHB1YmxpY1xuICAgKi9cbiAgcGxheWVyLnBsYXkgPSBmdW5jdGlvbigpIHtcbiAgICBpZihwbGF5YmFjay5yZWFkeSkge1xuICAgICAgZmFpbENvdW50ID0gMDtcbiAgICAgIHBsYXliYWNrLkF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgIHBsYXliYWNrLnN0b3AoKTtcbiAgICAgIHBsYXliYWNrLnJlc2V0KCk7XG4gICAgICBpZihldmVudHMpIGV2ZW50cy5kaXNwYXRjaCgnUGxheWVyLnBsYXknLCB7fSk7XG4gICAgICBwbGF5YmFjay5wbGF5KCk7XG4gICAgfSBlbHNlIGlmKGV2ZW50cykge1xuICAgICAgZXZlbnRzLm9uKCdQbGF5ZXIubG9hZFN0eWxlJywgcGxheWVyLnBsYXksIHRydWUpO1xuICAgIH0gZWxzZSBpZihmYWlsQ291bnQgPCAxMCkge1xuICAgICAgc2V0VGltZW91dChwbGF5ZXIucGxheSwgMjAwKTtcbiAgICAgIGZhaWxDb3VudCsrO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBAdG9kbyBvayBzbyBob3cgYXJlIHdlIGxvZ2dpbmcgdGhpbmdzPyBlc2xpbnQgc2F5cyBubyBjb25zb2xlXG4gICAgfVxuICB9O1xuICBcbiAgLyoqXG4gICAqIFN0b3AgcGxheWluZyB0aGUgTm90b2Nob3JkLlxuICAgKiBAcHVibGljXG4gICAqL1xuICBwbGF5ZXIuc3RvcCA9IHBsYXliYWNrLnN0b3A7XG4gIFxuICAvKipcbiAgICogQ29uZmlndXJlIHRoZSBwbGF5ZXIuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gT3B0aW9uYWw6IG9wdGlvbnMgZm9yIHRoZSBQbGF5ZXIuXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy50ZW1wbz0xMjBdIFRlbXBvIGZvciB0aGUgcGxheWVyLlxuICAgKiBAcHVibGljXG4gICAqL1xuICBwbGF5ZXIuY29uZmlnID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHBsYXllci5zdG9wKCk7XG4gICAgcGxheWJhY2sudGVtcG8gPSAob3B0aW9ucyAmJiBvcHRpb25zLnRlbXBvKSB8fCAxMjA7XG4gIH07XG4gIHBsYXllci5jb25maWcoKTtcbiAgXG4gIHJldHVybiBwbGF5ZXI7XG59KSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/player/player.js\n");

/***/ }),

/***/ "./src/player/styles/basic.js":
/*!************************************!*\
  !*** ./src/player/styles/basic.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return style_basic; });\n/*\n * A style is expected to take one parameter, the player's playback object.\n * The playback object has all of the functionality a style needs to get chord\n * data from the current measure, and play notes.\n *\n * A style should have a requireInstruments array, which can include\n * \"General MIDI\" instrument names as well as the string 'percussion'.\n * A style should return 1-2 functions: onBeat or onMeasure.\n */\n\nfunction style_basic(playback) {\n  var style = {};\n  \n  /*\n   * The load function could be no-op if you really wanted, but it has to\n   * exist. You can use it to load instruments required by the style.\n   */\n  style.requireInstruments = [\n    'percussion',\n    'acoustic_grand_piano',\n    'acoustic_bass'\n  ];\n  \n  /*\n   * Style should have either an onBeat function or an onMeasure function.\n   * Here we have both.\n   */\n  style.onMeasure = function() {\n    // Play metronome.\n    playback.drum('Bass Drum');\n    \n    // This isn't the best way to do this, but for the sake of example,\n    // here's how the scheduler works:\n    playback.schedule(() => playback.drum('Hi Wood Block'), [2, 3, 4]);\n  };\n  style.onBeat = function() {\n    var chord = playback.beats[playback.beat];\n    // If there's no chord returned by getBeat, there's no chord on this beat.\n    if(chord) {\n      \n      // This turns a beat object into an array of note names.\n      // the second argument decides whether to go up or down the octave.\n      var notes = playback.octave(chord, 4, true);\n      playback.playNotes({\n        notes: notes, // Note name or array of note names.\n        instrument: 'acoustic_grand_piano',\n        dur: playback.restsAfter // Number of beats to play the note.\n        // Optionally: 'velocity' which is a number 0-127 representing volume.\n        // Well, technically it represents how hard you play an instrument\n        // but it corresponds to volume so.\n      });\n      \n      playback.playNotes({\n        notes: chord[0] + 2,\n        instrument: 'acoustic_bass',\n        dur: playback.restsAfter\n      });\n    }\n  };\n  \n  return style;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyL3N0eWxlcy9iYXNpYy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9wbGF5ZXIvc3R5bGVzL2Jhc2ljLmpzP2JlN2IiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEEgc3R5bGUgaXMgZXhwZWN0ZWQgdG8gdGFrZSBvbmUgcGFyYW1ldGVyLCB0aGUgcGxheWVyJ3MgcGxheWJhY2sgb2JqZWN0LlxuICogVGhlIHBsYXliYWNrIG9iamVjdCBoYXMgYWxsIG9mIHRoZSBmdW5jdGlvbmFsaXR5IGEgc3R5bGUgbmVlZHMgdG8gZ2V0IGNob3JkXG4gKiBkYXRhIGZyb20gdGhlIGN1cnJlbnQgbWVhc3VyZSwgYW5kIHBsYXkgbm90ZXMuXG4gKlxuICogQSBzdHlsZSBzaG91bGQgaGF2ZSBhIHJlcXVpcmVJbnN0cnVtZW50cyBhcnJheSwgd2hpY2ggY2FuIGluY2x1ZGVcbiAqIFwiR2VuZXJhbCBNSURJXCIgaW5zdHJ1bWVudCBuYW1lcyBhcyB3ZWxsIGFzIHRoZSBzdHJpbmcgJ3BlcmN1c3Npb24nLlxuICogQSBzdHlsZSBzaG91bGQgcmV0dXJuIDEtMiBmdW5jdGlvbnM6IG9uQmVhdCBvciBvbk1lYXN1cmUuXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3R5bGVfYmFzaWMocGxheWJhY2spIHtcbiAgdmFyIHN0eWxlID0ge307XG4gIFxuICAvKlxuICAgKiBUaGUgbG9hZCBmdW5jdGlvbiBjb3VsZCBiZSBuby1vcCBpZiB5b3UgcmVhbGx5IHdhbnRlZCwgYnV0IGl0IGhhcyB0b1xuICAgKiBleGlzdC4gWW91IGNhbiB1c2UgaXQgdG8gbG9hZCBpbnN0cnVtZW50cyByZXF1aXJlZCBieSB0aGUgc3R5bGUuXG4gICAqL1xuICBzdHlsZS5yZXF1aXJlSW5zdHJ1bWVudHMgPSBbXG4gICAgJ3BlcmN1c3Npb24nLFxuICAgICdhY291c3RpY19ncmFuZF9waWFubycsXG4gICAgJ2Fjb3VzdGljX2Jhc3MnXG4gIF07XG4gIFxuICAvKlxuICAgKiBTdHlsZSBzaG91bGQgaGF2ZSBlaXRoZXIgYW4gb25CZWF0IGZ1bmN0aW9uIG9yIGFuIG9uTWVhc3VyZSBmdW5jdGlvbi5cbiAgICogSGVyZSB3ZSBoYXZlIGJvdGguXG4gICAqL1xuICBzdHlsZS5vbk1lYXN1cmUgPSBmdW5jdGlvbigpIHtcbiAgICAvLyBQbGF5IG1ldHJvbm9tZS5cbiAgICBwbGF5YmFjay5kcnVtKCdCYXNzIERydW0nKTtcbiAgICBcbiAgICAvLyBUaGlzIGlzbid0IHRoZSBiZXN0IHdheSB0byBkbyB0aGlzLCBidXQgZm9yIHRoZSBzYWtlIG9mIGV4YW1wbGUsXG4gICAgLy8gaGVyZSdzIGhvdyB0aGUgc2NoZWR1bGVyIHdvcmtzOlxuICAgIHBsYXliYWNrLnNjaGVkdWxlKCgpID0+IHBsYXliYWNrLmRydW0oJ0hpIFdvb2QgQmxvY2snKSwgWzIsIDMsIDRdKTtcbiAgfTtcbiAgc3R5bGUub25CZWF0ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNob3JkID0gcGxheWJhY2suYmVhdHNbcGxheWJhY2suYmVhdF07XG4gICAgLy8gSWYgdGhlcmUncyBubyBjaG9yZCByZXR1cm5lZCBieSBnZXRCZWF0LCB0aGVyZSdzIG5vIGNob3JkIG9uIHRoaXMgYmVhdC5cbiAgICBpZihjaG9yZCkge1xuICAgICAgXG4gICAgICAvLyBUaGlzIHR1cm5zIGEgYmVhdCBvYmplY3QgaW50byBhbiBhcnJheSBvZiBub3RlIG5hbWVzLlxuICAgICAgLy8gdGhlIHNlY29uZCBhcmd1bWVudCBkZWNpZGVzIHdoZXRoZXIgdG8gZ28gdXAgb3IgZG93biB0aGUgb2N0YXZlLlxuICAgICAgdmFyIG5vdGVzID0gcGxheWJhY2sub2N0YXZlKGNob3JkLCA0LCB0cnVlKTtcbiAgICAgIHBsYXliYWNrLnBsYXlOb3Rlcyh7XG4gICAgICAgIG5vdGVzOiBub3RlcywgLy8gTm90ZSBuYW1lIG9yIGFycmF5IG9mIG5vdGUgbmFtZXMuXG4gICAgICAgIGluc3RydW1lbnQ6ICdhY291c3RpY19ncmFuZF9waWFubycsXG4gICAgICAgIGR1cjogcGxheWJhY2sucmVzdHNBZnRlciAvLyBOdW1iZXIgb2YgYmVhdHMgdG8gcGxheSB0aGUgbm90ZS5cbiAgICAgICAgLy8gT3B0aW9uYWxseTogJ3ZlbG9jaXR5JyB3aGljaCBpcyBhIG51bWJlciAwLTEyNyByZXByZXNlbnRpbmcgdm9sdW1lLlxuICAgICAgICAvLyBXZWxsLCB0ZWNobmljYWxseSBpdCByZXByZXNlbnRzIGhvdyBoYXJkIHlvdSBwbGF5IGFuIGluc3RydW1lbnRcbiAgICAgICAgLy8gYnV0IGl0IGNvcnJlc3BvbmRzIHRvIHZvbHVtZSBzby5cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBwbGF5YmFjay5wbGF5Tm90ZXMoe1xuICAgICAgICBub3RlczogY2hvcmRbMF0gKyAyLFxuICAgICAgICBpbnN0cnVtZW50OiAnYWNvdXN0aWNfYmFzcycsXG4gICAgICAgIGR1cjogcGxheWJhY2sucmVzdHNBZnRlclxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICBcbiAgcmV0dXJuIHN0eWxlO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/player/styles/basic.js\n");

/***/ }),

/***/ "./src/player/styles/samba.js":
/*!************************************!*\
  !*** ./src/player/styles/samba.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return style_samba; });\n\nfunction style_samba(playback) {\n  var style = {};\n  \n  style.requireInstruments = [\n    'percussion',\n    'acoustic_grand_piano',\n    'acoustic_bass'\n  ];\n  \n  var drums = function() {\n    var hatPattern;\n    if(playback.measureInPhrase % 2 === 0) {\n      hatPattern = playback.randomFrom([\n        [2,3,3.5,4.5],\n        [1,2,3,3.5,4,4.5]\n      ]);\n    } else {\n      hatPattern = playback.randomFrom([\n        [1.5,2,3,4,4.5],\n        [1.5,2,3,3.5,4.5]\n      ]);\n    }\n    // not my fault that the GM standard doesn't hyphenate consistently\n    // https://www.midi.org/specifications-old/item/gm-level-1-sound-set\n    playback.schedule(() => playback.drum('Open Hi-Hat', 0.1), hatPattern);\n    \n    playback.schedule(() => playback.drum('Bass Drum', 0.2), [1,2.5]);\n    playback.schedule(() => playback.drum('Closed Hi Hat', 0.1), [2,4]);\n  };\n  \n  var bass = function() {\n    if(playback.beats[2] || playback.beats[4]) {\n      for(let i = 1; i < playback.beats.length; i++) {\n        let beat = playback.beats[i];\n        if(beat) {\n          playback.schedule(() => {\n            playback.playNotes({\n              notes: beat[0] + 2,\n              instrument: 'acoustic_bass',\n              dur: 1,\n              velocity: 127\n            });\n          }, i);\n        }\n      }\n    } else {\n      if(playback.beats[3]\n        && playback.beats[3][0] != playback.beats[1][0]) {\n        playback.scheduleNotes({\n          instrument: 'acoustic_bass',\n          velocity: 127,\n          data: [\n            {\n              times: 1,\n              notes: playback.beats[1][0] + 2,\n              dur: 1.5\n            },\n            {\n              times: 2.5,\n              notes: playback.beats[1][0] + 2,\n              dur: 0.5\n            },\n            {\n              times: 3,\n              notes: playback.beats[3][0] + 2,\n              dur: 1.5\n            },\n            {\n              times: 4.5,\n              notes: playback.beats[3][0] + 2,\n              dur: 0.5\n            }\n          ]\n        });\n      } else {\n        // @todo dim?\n        let low5 = playback.tonal.transpose(playback.beats[1][0] + 1, 'P5');\n        let coinFlip = Math.random() < 0.5;\n        if(coinFlip) {\n          playback.scheduleNotes({\n            instrument: 'acoustic_bass',\n            velocity: 127,\n            data: [\n              {\n                times: 1,\n                notes: playback.beats[1][0] + 2,\n                dur: 1.5\n              },\n              {\n                times: 2.5,\n                notes: low5,\n                dur: 2.5\n              }\n            ]\n          });\n        } else {\n          playback.scheduleNotes({\n            instrument: 'acoustic_bass',\n            velocity: 127,\n            data: [\n              {\n                times: 1,\n                notes: playback.beats[1][0] + 2,\n                dur: 1.5\n              },\n              {\n                times: 2.5,\n                notes: low5,\n                dur: 1.5\n              },\n              {\n                times: 4,\n                notes: playback.beats[1][0] + 2,\n                dur: 1\n              },\n            ]\n          });\n        }\n      }\n    }\n  };\n  \n  var piano = function() {\n    if(playback.beats[2] || playback.beats[4]) {\n      for(let i = 1; i < playback.beats.length; i++) {\n        let beat = playback.beats[i];\n        if(beat) {\n          playback.schedule(() => {\n            playback.playNotes({\n              notes: playback.octave(beat, 4, true),\n              instrument: 'acoustic_grand_piano',\n              dur: 2\n            });\n          }, i);\n        }\n      }\n    } else {\n      var patterns = [\n        {\n          t: [1.5,2,3.5],\n          l: [0.5,1.5,1]\n        },\n        {\n          t: [1,2.5,3.5],\n          l: [1.5, 0.5, 1]\n        },\n        {\n          t: [1,2.5,4,4.5],\n          l: [1.5,1.5,0.5,0.5]\n        }\n      ];\n      if(!playback.beats[3]) patterns.push({\n        t: [1,2.5],\n        l: [1.5,1.5]\n      });\n      var pianoPattern = playback.randomFrom(patterns);\n      var item = 0;\n      playback.schedule(() => {\n        var beat = playback.beats[1];\n        if(playback.beat >= 3) {\n          if(playback.beats[3]) beat = playback.beats[3];\n        }\n        var length = pianoPattern.l[item++];\n        playback.playNotes({\n          notes: playback.octave(beat, 4, true),\n          instrument: 'acoustic_grand_piano',\n          dur: length,\n          roll: (length > 1)\n        });\n      }, pianoPattern.t);\n    }\n  };\n  \n  style.onMeasure = function() {\n    drums();\n    bass();\n    piano();\n  };\n  \n  return style;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyL3N0eWxlcy9zYW1iYS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9wbGF5ZXIvc3R5bGVzL3NhbWJhLmpzPzJlMGYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdHlsZV9zYW1iYShwbGF5YmFjaykge1xuICB2YXIgc3R5bGUgPSB7fTtcbiAgXG4gIHN0eWxlLnJlcXVpcmVJbnN0cnVtZW50cyA9IFtcbiAgICAncGVyY3Vzc2lvbicsXG4gICAgJ2Fjb3VzdGljX2dyYW5kX3BpYW5vJyxcbiAgICAnYWNvdXN0aWNfYmFzcydcbiAgXTtcbiAgXG4gIHZhciBkcnVtcyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoYXRQYXR0ZXJuO1xuICAgIGlmKHBsYXliYWNrLm1lYXN1cmVJblBocmFzZSAlIDIgPT09IDApIHtcbiAgICAgIGhhdFBhdHRlcm4gPSBwbGF5YmFjay5yYW5kb21Gcm9tKFtcbiAgICAgICAgWzIsMywzLjUsNC41XSxcbiAgICAgICAgWzEsMiwzLDMuNSw0LDQuNV1cbiAgICAgIF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBoYXRQYXR0ZXJuID0gcGxheWJhY2sucmFuZG9tRnJvbShbXG4gICAgICAgIFsxLjUsMiwzLDQsNC41XSxcbiAgICAgICAgWzEuNSwyLDMsMy41LDQuNV1cbiAgICAgIF0pO1xuICAgIH1cbiAgICAvLyBub3QgbXkgZmF1bHQgdGhhdCB0aGUgR00gc3RhbmRhcmQgZG9lc24ndCBoeXBoZW5hdGUgY29uc2lzdGVudGx5XG4gICAgLy8gaHR0cHM6Ly93d3cubWlkaS5vcmcvc3BlY2lmaWNhdGlvbnMtb2xkL2l0ZW0vZ20tbGV2ZWwtMS1zb3VuZC1zZXRcbiAgICBwbGF5YmFjay5zY2hlZHVsZSgoKSA9PiBwbGF5YmFjay5kcnVtKCdPcGVuIEhpLUhhdCcsIDAuMSksIGhhdFBhdHRlcm4pO1xuICAgIFxuICAgIHBsYXliYWNrLnNjaGVkdWxlKCgpID0+IHBsYXliYWNrLmRydW0oJ0Jhc3MgRHJ1bScsIDAuMiksIFsxLDIuNV0pO1xuICAgIHBsYXliYWNrLnNjaGVkdWxlKCgpID0+IHBsYXliYWNrLmRydW0oJ0Nsb3NlZCBIaSBIYXQnLCAwLjEpLCBbMiw0XSk7XG4gIH07XG4gIFxuICB2YXIgYmFzcyA9IGZ1bmN0aW9uKCkge1xuICAgIGlmKHBsYXliYWNrLmJlYXRzWzJdIHx8IHBsYXliYWNrLmJlYXRzWzRdKSB7XG4gICAgICBmb3IobGV0IGkgPSAxOyBpIDwgcGxheWJhY2suYmVhdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IGJlYXQgPSBwbGF5YmFjay5iZWF0c1tpXTtcbiAgICAgICAgaWYoYmVhdCkge1xuICAgICAgICAgIHBsYXliYWNrLnNjaGVkdWxlKCgpID0+IHtcbiAgICAgICAgICAgIHBsYXliYWNrLnBsYXlOb3Rlcyh7XG4gICAgICAgICAgICAgIG5vdGVzOiBiZWF0WzBdICsgMixcbiAgICAgICAgICAgICAgaW5zdHJ1bWVudDogJ2Fjb3VzdGljX2Jhc3MnLFxuICAgICAgICAgICAgICBkdXI6IDEsXG4gICAgICAgICAgICAgIHZlbG9jaXR5OiAxMjdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sIGkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmKHBsYXliYWNrLmJlYXRzWzNdXG4gICAgICAgICYmIHBsYXliYWNrLmJlYXRzWzNdWzBdICE9IHBsYXliYWNrLmJlYXRzWzFdWzBdKSB7XG4gICAgICAgIHBsYXliYWNrLnNjaGVkdWxlTm90ZXMoe1xuICAgICAgICAgIGluc3RydW1lbnQ6ICdhY291c3RpY19iYXNzJyxcbiAgICAgICAgICB2ZWxvY2l0eTogMTI3LFxuICAgICAgICAgIGRhdGE6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdGltZXM6IDEsXG4gICAgICAgICAgICAgIG5vdGVzOiBwbGF5YmFjay5iZWF0c1sxXVswXSArIDIsXG4gICAgICAgICAgICAgIGR1cjogMS41XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0aW1lczogMi41LFxuICAgICAgICAgICAgICBub3RlczogcGxheWJhY2suYmVhdHNbMV1bMF0gKyAyLFxuICAgICAgICAgICAgICBkdXI6IDAuNVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdGltZXM6IDMsXG4gICAgICAgICAgICAgIG5vdGVzOiBwbGF5YmFjay5iZWF0c1szXVswXSArIDIsXG4gICAgICAgICAgICAgIGR1cjogMS41XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0aW1lczogNC41LFxuICAgICAgICAgICAgICBub3RlczogcGxheWJhY2suYmVhdHNbM11bMF0gKyAyLFxuICAgICAgICAgICAgICBkdXI6IDAuNVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBAdG9kbyBkaW0/XG4gICAgICAgIGxldCBsb3c1ID0gcGxheWJhY2sudG9uYWwudHJhbnNwb3NlKHBsYXliYWNrLmJlYXRzWzFdWzBdICsgMSwgJ1A1Jyk7XG4gICAgICAgIGxldCBjb2luRmxpcCA9IE1hdGgucmFuZG9tKCkgPCAwLjU7XG4gICAgICAgIGlmKGNvaW5GbGlwKSB7XG4gICAgICAgICAgcGxheWJhY2suc2NoZWR1bGVOb3Rlcyh7XG4gICAgICAgICAgICBpbnN0cnVtZW50OiAnYWNvdXN0aWNfYmFzcycsXG4gICAgICAgICAgICB2ZWxvY2l0eTogMTI3LFxuICAgICAgICAgICAgZGF0YTogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGltZXM6IDEsXG4gICAgICAgICAgICAgICAgbm90ZXM6IHBsYXliYWNrLmJlYXRzWzFdWzBdICsgMixcbiAgICAgICAgICAgICAgICBkdXI6IDEuNVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGltZXM6IDIuNSxcbiAgICAgICAgICAgICAgICBub3RlczogbG93NSxcbiAgICAgICAgICAgICAgICBkdXI6IDIuNVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGxheWJhY2suc2NoZWR1bGVOb3Rlcyh7XG4gICAgICAgICAgICBpbnN0cnVtZW50OiAnYWNvdXN0aWNfYmFzcycsXG4gICAgICAgICAgICB2ZWxvY2l0eTogMTI3LFxuICAgICAgICAgICAgZGF0YTogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGltZXM6IDEsXG4gICAgICAgICAgICAgICAgbm90ZXM6IHBsYXliYWNrLmJlYXRzWzFdWzBdICsgMixcbiAgICAgICAgICAgICAgICBkdXI6IDEuNVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGltZXM6IDIuNSxcbiAgICAgICAgICAgICAgICBub3RlczogbG93NSxcbiAgICAgICAgICAgICAgICBkdXI6IDEuNVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGltZXM6IDQsXG4gICAgICAgICAgICAgICAgbm90ZXM6IHBsYXliYWNrLmJlYXRzWzFdWzBdICsgMixcbiAgICAgICAgICAgICAgICBkdXI6IDFcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgXG4gIHZhciBwaWFubyA9IGZ1bmN0aW9uKCkge1xuICAgIGlmKHBsYXliYWNrLmJlYXRzWzJdIHx8IHBsYXliYWNrLmJlYXRzWzRdKSB7XG4gICAgICBmb3IobGV0IGkgPSAxOyBpIDwgcGxheWJhY2suYmVhdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IGJlYXQgPSBwbGF5YmFjay5iZWF0c1tpXTtcbiAgICAgICAgaWYoYmVhdCkge1xuICAgICAgICAgIHBsYXliYWNrLnNjaGVkdWxlKCgpID0+IHtcbiAgICAgICAgICAgIHBsYXliYWNrLnBsYXlOb3Rlcyh7XG4gICAgICAgICAgICAgIG5vdGVzOiBwbGF5YmFjay5vY3RhdmUoYmVhdCwgNCwgdHJ1ZSksXG4gICAgICAgICAgICAgIGluc3RydW1lbnQ6ICdhY291c3RpY19ncmFuZF9waWFubycsXG4gICAgICAgICAgICAgIGR1cjogMlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSwgaSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHBhdHRlcm5zID0gW1xuICAgICAgICB7XG4gICAgICAgICAgdDogWzEuNSwyLDMuNV0sXG4gICAgICAgICAgbDogWzAuNSwxLjUsMV1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHQ6IFsxLDIuNSwzLjVdLFxuICAgICAgICAgIGw6IFsxLjUsIDAuNSwgMV1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHQ6IFsxLDIuNSw0LDQuNV0sXG4gICAgICAgICAgbDogWzEuNSwxLjUsMC41LDAuNV1cbiAgICAgICAgfVxuICAgICAgXTtcbiAgICAgIGlmKCFwbGF5YmFjay5iZWF0c1szXSkgcGF0dGVybnMucHVzaCh7XG4gICAgICAgIHQ6IFsxLDIuNV0sXG4gICAgICAgIGw6IFsxLjUsMS41XVxuICAgICAgfSk7XG4gICAgICB2YXIgcGlhbm9QYXR0ZXJuID0gcGxheWJhY2sucmFuZG9tRnJvbShwYXR0ZXJucyk7XG4gICAgICB2YXIgaXRlbSA9IDA7XG4gICAgICBwbGF5YmFjay5zY2hlZHVsZSgoKSA9PiB7XG4gICAgICAgIHZhciBiZWF0ID0gcGxheWJhY2suYmVhdHNbMV07XG4gICAgICAgIGlmKHBsYXliYWNrLmJlYXQgPj0gMykge1xuICAgICAgICAgIGlmKHBsYXliYWNrLmJlYXRzWzNdKSBiZWF0ID0gcGxheWJhY2suYmVhdHNbM107XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxlbmd0aCA9IHBpYW5vUGF0dGVybi5sW2l0ZW0rK107XG4gICAgICAgIHBsYXliYWNrLnBsYXlOb3Rlcyh7XG4gICAgICAgICAgbm90ZXM6IHBsYXliYWNrLm9jdGF2ZShiZWF0LCA0LCB0cnVlKSxcbiAgICAgICAgICBpbnN0cnVtZW50OiAnYWNvdXN0aWNfZ3JhbmRfcGlhbm8nLFxuICAgICAgICAgIGR1cjogbGVuZ3RoLFxuICAgICAgICAgIHJvbGw6IChsZW5ndGggPiAxKVxuICAgICAgICB9KTtcbiAgICAgIH0sIHBpYW5vUGF0dGVybi50KTtcbiAgICB9XG4gIH07XG4gIFxuICBzdHlsZS5vbk1lYXN1cmUgPSBmdW5jdGlvbigpIHtcbiAgICBkcnVtcygpO1xuICAgIGJhc3MoKTtcbiAgICBwaWFubygpO1xuICB9O1xuICBcbiAgcmV0dXJuIHN0eWxlO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/player/styles/samba.js\n");

/***/ }),

/***/ "./src/player/styles/swing.js":
/*!************************************!*\
  !*** ./src/player/styles/swing.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return style_swing; });\n\nfunction style_swing(playback) {\n  var style = {};\n  \n  style.swing = true;\n  \n  style.requireInstruments = [\n    'percussion',\n    'acoustic_grand_piano',\n    'acoustic_bass'\n  ];\n  \n  var drums = function() {\n    playback.schedule(\n      () => playback.drum('Open Hi-Hat', 0.1),\n      [1,2,2.5,3,4,4.5]\n    );\n    playback.schedule(() => playback.drum('Bass Drum', 0.2), [1,2,3,4]);\n    playback.schedule(() => playback.drum('Closed Hi Hat', 0.1), [2,4]);\n    \n    if(Math.random() < 0.3) {\n      let snarePattern = playback.randomFrom([\n        [4],\n        [2.5],\n        [2.5,3.5,4.5]\n      ]);\n      playback.schedule(\n        () => playback.drum('Acoustic Snare', 0.1),\n        snarePattern\n      );\n    }\n  };\n  \n  var fourthTrick = false;\n  var bass = function() {\n    var octv = function(chord) {\n      return playback.octave(chord, 2, true);\n    };\n    var transpose = function(note, intvl) {\n      return playback.tonal.transpose(note + 4, intvl).replace(/\\d/, '');\n    };\n    var note1, note2, note3, note4;\n    {\n      let key = playback.song.getTransposedKey();\n      var keyscale = playback.tonal.Scale.notes(key + ' major');\n    }\n    \n    if(playback.beats[2] || playback.beats[4]) {\n      note1 = playback.beats[1] && playback.beats[1][0];\n      note2 = playback.beats[2] && playback.beats[2][0];\n      note3 = playback.beats[3] && playback.beats[3][0];\n      note4 = playback.beats[4] && playback.beats[4][0];\n    } else {\n      // loosely based on https://music.stackexchange.com/a/22174/5563\n      let beat3 = playback.beats[3] || playback.beats[1];\n      let nextMeasure = playback.measure.getNextMeasure();\n      let doFourthTrick = false;\n      let lookahead = null, interval31 = null;\n      if(nextMeasure) {\n        lookahead = nextMeasure.getBeat(0);\n        interval31 = playback.tonal.Distance.subtract(\n          lookahead[0],\n          beat3[0]);\n        doFourthTrick = interval31 == '4P' && (Math.random() < 0.2);\n      }\n      \n      if(fourthTrick) {\n        let beat1 = playback.beats[1];\n        if(beat1.quality == 'Major' || beat1.quality == 'Augmented') {\n          note1 = transpose(beat1[0], '3M');\n        } else { // chord is m/dim\n          note1 = transpose(beat1[0], '3m');\n        }\n      } else {\n        note1 = playback.beats[1][0];\n      }\n      \n      if(doFourthTrick) {\n        fourthTrick = true;\n        note4 = transpose(beat3[0], '7m');\n      } else {\n        fourthTrick = false;\n        let next5 = lookahead[3];\n        if(keyscale.includes(next5) && Math.random() < 0.3) {\n          note4 = next5;\n        } else if(lookahead) {\n          let scale3;\n          if(beat3.quality == 'Major' || beat3.quality == 'Augmented') {\n            scale3 = playback.tonal.Scale.notes(beat3[0] + ' major');\n            // @todo that's actually wrong? #5 for aug????\n          } else {\n            scale3 = playback.tonal.Scale.notes(beat3[0] + ' minor');\n            // @todo likewise for dim\n          }\n          let intervals = playback.shuffle(['-2m', '-2M','2m', '2M']);\n          for(let int of intervals) {\n            note4 = transpose(lookahead[0], int);\n            if(scale3.includes(note4) && keyscale.includes(note4)) break;\n          }\n          if(!note4) note4 = beat3[2];\n        } else {\n          note4 = beat3[2];\n        }\n      }\n      \n      let rootChanges = (beat3[0] != playback.beats[1][0]);\n      let chord1 = playback.tonal.Chord.notes(playback.beats[0]).slice();\n      chord1.splice(0,1);\n      if(rootChanges) {\n        note3 = beat3[0];\n        if(chord1.includes(note4)) {\n          let idx = chord1.indexOf(note4);\n          chord1.splice(idx, 1);\n        }\n        note2 = playback.randomFrom(chord1);\n      } else {\n        let rand = Math.floor(Math.random() * chord1.length);\n        note2 = chord1.splice(rand,1);\n        note3 = playback.randomFrom(chord1);\n      }\n    }\n    playback.scheduleNotes({\n      instrument: 'acoustic_bass',\n      velocity: 127,\n      data: [\n        {\n          times: 1,\n          notes: octv(note1),\n          dur: 1\n        },\n        {\n          times: 2,\n          notes: note2 ? octv(note2) : [],\n          dur: 1\n        },\n        {\n          times: 3,\n          notes: note3 ? octv(note3) : [],\n          dur: 1\n        },\n        {\n          times: 4,\n          notes: note4 ? octv(note4) : [],\n          dur: 1\n        }\n      ]\n    });\n  };\n  \n  var piano = function() {\n    if(playback.beats[2] || playback.beats[4]) {\n      for(let i = 1; i < playback.beats.length; i++) {\n        let beat = playback.beats[i];\n        if(beat) {\n          playback.schedule(() => {\n            playback.playNotes({\n              notes: playback.octave(beat, 4, true),\n              instrument: 'acoustic_grand_piano',\n              dur: 2\n            });\n          }, i);\n        }\n      }\n    } else {\n      var patterns = [\n        {\n          t: [1.5,2,3.5],\n          l: [0.5,1.5,1]\n        },\n        {\n          t: [1,2.5,3.5],\n          l: [1.5, 0.5, 1]\n        },\n        {\n          t: [1,2.5,3.5,4.5],\n          l: [1.5,1.5,0.5,0.5]\n        }\n      ];\n      if(!playback.beats[3]) patterns.push({\n        t: [1,2.5],\n        l: [1.5,1.5]\n      });\n      var pianoPattern = playback.randomFrom(patterns);\n      var item = 0;\n      playback.schedule(() => {\n        var beat = playback.beats[1];\n        if(playback.beat >= 3) {\n          if(playback.beats[3]) beat = playback.beats[3];\n        }\n        var length = pianoPattern.l[item++];\n        playback.playNotes({\n          notes: playback.octave(beat, 4, true),\n          instrument: 'acoustic_grand_piano',\n          dur: length,\n          roll: (length > 1)\n        });\n      }, pianoPattern.t);\n    }\n  };\n  \n  /*\n   * Style should have either an onBeat function or an onMeasure function.\n   * Here we have both.\n   */\n  style.onMeasure = function() {\n    drums();\n    bass();\n    piano();\n  };\n  \n  return style;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/player/styles/swing.js\n");

/***/ }),

/***/ "./src/viewer/BeatView.js":
/*!********************************!*\
  !*** ./src/viewer/BeatView.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BeatView; });\n/**\n * Handles the visual representation of a beat within a MeasureView.\n * @class\n * @param {Object} [events] Notochord.events object.\n * @param {Object} viewer Notochord.viewer object.\n * @param {MeasureView} measureView The BeatView's parent measureView.\n * @param {Number} index Which beat this represents in the Measure.\n * @param {Number} xoffset The beat's horizontal offset in the MeasureView.\n */\nfunction BeatView(events, viewer, measureView, index, xoffset) {\n  this.measureView = measureView;\n  this.index = index;\n  \n  // Padding between the root of the chord and the accidental/other bits.\n  const PADDING_RIGHT = 7;\n  \n  this._svgGroup = document.createElementNS(viewer.SVG_NS, 'g');\n  this._svgGroup.classList.add('NotochordBeatView');\n  this._svgGroup.setAttributeNS(\n    null,\n    'transform',\n    `translate(${xoffset}, 0)`\n  );\n  this._svgGroup.setAttributeNS(null, 'tabindex', 0);\n  // Append right away so we can compute size.\n  this.measureView._svgGroup.appendChild(this._svgGroup);\n  \n  /**\n   * A rectangle behind the beat to make it look more interactive.\n   * @type {SVGRectElement}\n   * @private\n   */\n  var bgRect = document.createElementNS(viewer.SVG_NS, 'rect');\n  bgRect.classList.add('NotochordBeatViewBackground');\n  bgRect.setAttributeNS(null, 'x', '0');\n  bgRect.setAttributeNS(null, 'y', '0');\n  bgRect.setAttributeNS(null, 'width', viewer.globals.beatWidth);\n  bgRect.setAttributeNS(null, 'height', viewer.globals.rowHeight);\n  this._svgGroup.appendChild(bgRect);\n  \n  this._innerGroup = document.createElementNS(viewer.SVG_NS, 'g');\n  this._svgGroup.appendChild(this._innerGroup);\n  \n  /**\n   * Get the root of the chord, or a Roman numeral if viewer.scaleDegrees is\n   * true.\n   * @param {String} chord chord string to parse.\n   * @param {Object} [degree] if included, render the given scale degree\n   *  instead of the root of the chord.\n   * @returns {Object} 2 Strings, rootText (or Roman numeral) and accidental\n   * (or null).\n   * @private\n   */\n  this._getRootText = function(chord, degree) {\n    if(degree !== undefined) {\n      return {\n        rootText: degree.numeral,\n        accidental: degree.flat ? 'b' : null\n      };\n    } else {\n      var parsed = Tonal.Chord.tokenize(chord);\n      return {\n        rootText: parsed[0].charAt(0),\n        accidental: parsed[0].charAt(1) || null\n      };\n    }\n  };\n  \n  /**\n   * If the chord is anything besodes a major triad, it'll need extra symbols\n   * to describe quality, suspensions, 7ths, etc. This grabs those.\n   * @param {Object} chord ChordMagic object to parse.\n   * @returns {String} Bottom text to render.\n   * @private\n   */\n  this._getBottomText = function(chord) {\n    var bottomText = Tonal.Chord.tokenize(chord)[1];\n    if(!bottomText) return '';\n    bottomText = bottomText.replace(\n      /M(?=7|9|11|13)/,\n      viewer.PATHS.delta_char);\n    bottomText = bottomText.replace(/m/g, '-');\n    return bottomText;\n  };\n  \n  /**\n   * Render an accidental in the correct size and place.\n   * @param {String} acc WIth accidental to render: either 'b' or '#'.\n   * @param {SVGRect} rootbb Bounding box of the root.\n   * @private\n   */\n  this._renderAccidental = function(acc, rootbb) {\n    var path = document.createElementNS(viewer.SVG_NS, 'path');\n    var goal_height = (viewer.globals.H_HEIGHT * 0.6);\n    var x = rootbb.width + PADDING_RIGHT;\n    var y;\n    var orig_height;\n    if(acc == '#') {\n      path.setAttributeNS(null, 'd',viewer.PATHS.sharp);\n      orig_height = viewer.PATHS.sharp_height;\n      y = viewer.globals.topPadding + (0.3 * viewer.globals.H_HEIGHT);\n    } else {\n      path.setAttributeNS(null, 'd',viewer.PATHS.flat);\n      orig_height = viewer.PATHS.flat_height;\n      y = viewer.globals.topPadding + (0.3 * viewer.globals.H_HEIGHT)\n        - goal_height;\n    }\n    let scale = goal_height / orig_height;\n    path.setAttributeNS(\n      null,\n      'transform',\n      `translate(${x}, ${y}) scale(${scale})`\n    );\n    this._innerGroup.appendChild(path);\n  };\n  \n  /**\n   * If the chord is anything besodes a major triad, it'll need extra symbols\n   * to describe quality, suspensions, 7ths, etc. This renders those.\n   * @param {String} bottomText Bottom text to render.\n   * @param {SVGRect} rootbb Bounding box of the root.\n   * @private\n   */\n  this._renderBottomText = function(bottomText, rootbb) {\n    let text = document.createElementNS(viewer.SVG_NS, 'text');\n    text.appendChild(document.createTextNode(bottomText));\n    this._innerGroup.appendChild(text);\n    let scale = 0.5;\n    let x = rootbb.width + PADDING_RIGHT;\n    let y = viewer.globals.topPadding\n      + ((1 - scale) * viewer.globals.H_HEIGHT);\n    text.setAttributeNS(null,\n      'transform',\n      `translate(${x}, ${y}) scale(${scale})`\n    );\n  };\n  \n  /**\n   * Set whether the beatView is being edited.\n   * @param {Boolean} editing Whether or not the beat is being edited.\n   */\n  this.setEditing = function(editing) {\n    if(editing) {\n      this._svgGroup.classList.add('NotochordBeatViewEditing');\n    } else {\n      this._svgGroup.classList.remove('NotochordBeatViewEditing');\n    }\n  };\n  \n  this._svgGroup.addEventListener('focus', () => {\n    viewer.editor.setSelectedBeat(this);\n  });\n  this._svgGroup.addEventListener('mousedown', this._svgGroup.blur);\n  \n  var xScale = 1;\n  \n  /**\n   * Render a chord.\n   * @param {?String} chord A chord string to render, or null.\n   */\n  this.renderChord = function(chord) {\n    // delete whatever might be in this._svgGroup\n    while(this._innerGroup.firstChild) {\n      this._innerGroup.removeChild(this._innerGroup.firstChild);\n    }\n    \n    if(chord) {\n      var {rootText, accidental} = this._getRootText(chord);\n      var root = document.createElementNS(viewer.SVG_NS, 'text');\n      root.setAttributeNS(\n        null,\n        'transform',\n        `translate(0, ${viewer.globals.topPadding})`\n      );\n      root.appendChild(document.createTextNode(rootText));\n      this._innerGroup.appendChild(root);\n      \n      var rootbb = root.getBBox();\n      \n      // ACCIDENTALS\n      if(accidental) {\n        this._renderAccidental(accidental, rootbb);\n      }\n      // BOTTOM BITS\n      // If the chord is anything besides a major triad, it needs more bits\n      var bottomText = this._getBottomText(chord);\n      if(bottomText) {\n        this._renderBottomText(bottomText, rootbb);\n      }\n      \n      var igbb = this._innerGroup.getBBox();\n      //var nextBeat = this.measureView.measure.getBeat(this.index + 1);\n      if(igbb.width > viewer.globals.beatWidth) {\n        xScale = (viewer.globals.beatWidth / igbb.width) / xScale;\n      } else {\n        xScale = 1;\n      }\n      this._innerGroup.setAttributeNS(null,\n        'transform',\n        `scale(${xScale} 1)`\n      );\n    \n      /*if(chord.overridingRoot) {\n        // @todo scale down this._svgGroup and return a bigger this._svgGroup\n      } else {\n        \n      }*/\n    }\n  };\n  \n  var self = this;\n  // @todo docs\n  this.setHighlight = function(add) {\n    if(add) {\n      self._svgGroup.classList.add('NotochordPlayedBeat');\n    } else {\n      self._svgGroup.classList.remove('NotochordPlayedBeat');\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/viewer/BeatView.js\n");

/***/ }),

/***/ "./src/viewer/MeasureView.js":
/*!***********************************!*\
  !*** ./src/viewer/MeasureView.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MeasureView; });\n/**\n * Handles the visual representation of a Measure object.\n * @class\n * @param {Object} [events] Notochord.events object.\n * @param {Object} viewer Notochord.viewer object\n * @param {Measure} measure The Measure that the MeasureView represents.\n */\nfunction MeasureView(events, viewer, measure) {   \n  this.measure = measure; \n  var col = 0;\n  // link measure back to this\n  measure.measureView = this;\n  var self = this;\n  \n  /**\n   * A measure is represented in the nodetree by an SVG group full of things.\n   * @type {SVGGElement}\n   * @private Maybe this will change depending how much measures move around?\n   */\n  this._svgGroup = document.createElementNS(viewer.SVG_NS, 'g');\n  this._svgGroup.classList.add('NotochordMeasureView');\n  \n  /**\n   * Set a MeasureView's position.\n   * @param {Number} x X position.\n   * @param {Number} y Y position.\n   * @param {Number} _col Column (which measure this is in the row).\n   * @public\n   */\n  this.setPosition = function(x, y, _col) {\n    this._svgGroup.setAttributeNS(null, 'transform', `translate(${x}, ${y})`);\n    col = _col;\n    \n    // Only show right bar if is last measure in the row.\n    // @todo how to handle short rows?\n    if(col === viewer.globals.cols - 1) {\n      this._rightBar.setAttributeNS(null, 'visibility', 'visible');\n    } else {\n      this._rightBar.setAttributeNS(null, 'visibility', 'hidden');\n    }\n  };\n  \n  /**\n   * Inserts _svgGroup in the right location.\n   * @public\n   */\n  this.move = function() {\n    var newIndex = measure.getIndex();\n    if(this._svgGroup.parentNode) {\n      viewer._measureGroup.removeChild(this._svgGroup);\n    }\n    if(newIndex >= viewer._measureGroup.children.length - 1) {\n      viewer._measureGroup.appendChild(this._svgGroup);\n    } else {\n      viewer._measureGroup.insertBefore(this._svgGroup, newIndex);\n    }\n  };\n  this.move();\n  \n  /**\n   * Render Measure.attributes-related graphics.\n   * @private\n   */\n  this._renderAttributes = function() {\n    // delete whatever might be in this._svgGroup\n    while(this._attrsGroup.firstChild) {\n      this._attrsGroup.removeChild(this._attrsGroup.firstChild);\n    }\n    // @todo should attrsGroup be in attrs?\n    this._attrs = {};\n    \n    if(this.measure.attributes['repeatStart']) {\n      this._attrs.repeatStart = document.createElementNS(viewer.SVG_NS, 'g');\n      this._attrsGroup.appendChild(this._attrs.repeatStart);\n      this._attrs.repeatStart.classList.add('NotochordRepeatStart');\n      let radius = viewer.globals.rowHeight * 0.03;\n      let x = 0.25 * viewer.globals.measureXPadding;\n      \n      let topDot = document.createElementNS(viewer.SVG_NS, 'circle');\n      topDot.setAttributeNS(null, 'r', radius);\n      topDot.setAttributeNS(null, 'cx', x);\n      topDot.setAttributeNS(null, 'cy', viewer.globals.rowHeight * 2/5);\n      this._attrs.repeatStart.appendChild(topDot);\n      \n      let bottomDot = document.createElementNS(viewer.SVG_NS, 'circle');\n      bottomDot.setAttributeNS(null, 'r', radius);\n      bottomDot.setAttributeNS(null, 'cx', x);\n      bottomDot.setAttributeNS(null, 'cy', viewer.globals.rowHeight * 3/5);\n      this._attrs.repeatStart.appendChild(bottomDot);\n    }\n    \n    if(this.measure.attributes['repeatEnd']) {\n      this._attrs.repeatEnd = document.createElementNS(viewer.SVG_NS, 'g');\n      this._attrsGroup.appendChild(this._attrs.repeatEnd);\n      this._attrs.repeatEnd.classList.add('NotochordRepeatEnd');\n      let radius = viewer.globals.rowHeight * 0.03;\n      let x = viewer.globals.measureWidth\n        - (0.25 * viewer.globals.measureXPadding);\n      \n      let topDot = document.createElementNS(viewer.SVG_NS, 'circle');\n      topDot.setAttributeNS(null, 'r', radius);\n      topDot.setAttributeNS(null, 'cx', x);\n      topDot.setAttributeNS(null, 'cy', viewer.globals.rowHeight * 2/5);\n      this._attrs.repeatEnd.appendChild(topDot);\n      \n      let bottomDot = document.createElementNS(viewer.SVG_NS, 'circle');\n      bottomDot.setAttributeNS(null, 'r', radius);\n      bottomDot.setAttributeNS(null, 'cx', x);\n      bottomDot.setAttributeNS(null, 'cy', viewer.globals.rowHeight * 3/5);\n      this._attrs.repeatEnd.appendChild(bottomDot);\n    }\n  };\n  \n  /**\n   * Array containing timeSignature[0] Objects or null\n   * @type {?Object[]}\n   * @public\n   */\n  this.beatViews = [];\n  \n  /**\n   * Render the measure\n   * @public\n   */\n  this.render = function() {\n    for(let i = 0; i < measure.length; i++) {\n      let chord = measure.getBeat(i);\n      let offset = (0.5 * viewer.globals.measureXPadding)\n        + (i * viewer.globals.beatWidth);\n      let beat = new viewer.BeatView(events, viewer, this, i, offset);\n      if(viewer.scaleDegrees) {\n        let degree = measure.getScaleDegree(i);\n        beat.renderChord(chord, degree);\n      } else {\n        beat.renderChord(chord);\n      }\n      this.beatViews.push(beat);\n    }\n    \n    // When I receive a transpose event, re-render each beat.\n    if(events) {\n      let rerender = function() {\n        for(let i in self.beatViews) {\n          let beat = self.beatViews[i];\n          if(beat) {\n            let chord = measure.getBeat(i);\n            if(viewer.scaleDegrees) {\n              let degree = measure.getScaleDegree(i);\n              beat.renderChord(chord, degree);\n            } else {\n              beat.renderChord(chord);\n            }\n          }\n        }\n      };\n      events.on('Notochord.transpose', rerender);\n      events.on('Viewer.setScaleDegrees', rerender);\n    }\n    \n    /**\n     * Group to store Measure.attributes-related graphics.\n     * @type {SVGGElement}\n     * @private\n     */\n    this._attrsGroup = document.createElementNS(viewer.SVG_NS, 'g');\n    this._attrsGroup.classList.add('NotochordAttributes');\n    this._svgGroup.appendChild(this._attrsGroup);\n    \n    /**\n     * Object to store Measure.attributes-related elements.\n     * @type {Object}\n     * @private\n     */\n    this._attrs;\n    \n    this._renderAttributes();\n    \n    {\n      /**\n       * Left bar of the measure. Hidden for the first meassure on the line.\n       * @type {SVGPathElement}\n       * @private\n       */\n      this._leftBar = document.createElementNS(viewer.SVG_NS, 'path');\n      this._leftBar.setAttributeNS(null, 'd', viewer.PATHS.bar);\n      this._leftBar.classList.add('NotochordLeftBar');\n      let scale = viewer.globals.rowHeight / viewer.PATHS.bar_height;\n      this._leftBar.setAttributeNS(\n        null,\n        'transform',\n        `scale(${scale})`\n      );\n      this._leftBar.setAttributeNS(\n        null,\n        'style',\n        'stroke-width: 1px; stroke: black;'\n      );\n      this._svgGroup.appendChild(this._leftBar);\n    }\n    \n    {\n      /**\n       * Right bar of the measure. Hidden for all but the last meassure on the\n       *line.\n       * @type {SVGPathElement}\n       * @private\n       */\n      this._rightBar = document.createElementNS(viewer.SVG_NS, 'path');\n      this._rightBar.setAttributeNS(null, 'd', viewer.PATHS.bar);\n      this._rightBar.classList.add('NotochordRightBar');\n      let x = viewer.globals.measureWidth;\n      let scale = viewer.globals.rowHeight / viewer.PATHS.bar_height;\n      this._rightBar.setAttributeNS(\n        null,\n        'transform',\n        `translate(${x}, 0) scale(${scale})`\n      );\n      this._rightBar.setAttributeNS(\n        null,\n        'style',\n        'stroke-width: 1px; stroke: black;'\n      );\n      this._svgGroup.appendChild(this._rightBar);\n    }\n  };\n  this.render();\n  \n  // If connected to Notochord.player, highlight when my beat is played.\n  if(events) {\n    events.on('Player.playBeat', (args) => {\n      if(args.measure == self.measure.getIndex()) {\n        self.beatViews[args.beat].setHighlight(true);\n      }\n    });\n    events.on('Player.stopBeat', (args) => {\n      if(args.measure == self.measure.getIndex()) {\n        self.beatViews[args.beat].setHighlight(false);\n      }\n    });\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/viewer/MeasureView.js\n");

/***/ }),

/***/ "./src/viewer/editor.js":
/*!******************************!*\
  !*** ./src/viewer/editor.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function() {\n  var editor = {};\n  var editable = false;\n  \n  var events = null;\n  /**\n   * Attach events object so editor module can communicate with the others.\n   * @param {Object} ev Notochord events system.\n   */\n  editor.attachEvents = function(ev) {\n    events = ev;\n    events.create('Editor.setSelectedBeat');\n    events.on('Player.play', () => editor.setSelectedBeat(null));\n  };\n  \n  var viewer = null;\n  /**\n   * Attach viewer object so editor module can communicate with it.\n   * @param {Object} _viewer Viewer to attach.\n   */\n  editor.attachViewer = function(_viewer) {\n    viewer = _viewer;\n  };\n  \n  // @todoo docs\n  editor.setEditable = function(_editable) {\n    editable = _editable;\n    if(editable) {\n      viewer._svgElem.classList.add('NotochordEditable');\n    } else {\n      viewer._svgElem.classList.remove('NotochordEditable');\n    }\n  };\n  \n  editor.editedBeat = null;\n  /**\n   * Open the editor on a BeatView.\n   * @param {?BeatView} beatView BeatView to edit, or null to close editor.\n   * @public\n   */\n  editor.setSelectedBeat = function(beatView) {\n    if(!editable) return;\n    if(editor.editedBeat) editor.editedBeat.setEditing(false);\n    if(!beatView || editor.editedBeat == beatView) {\n      editor.editedBeat = null;\n      editor._input.classList.remove('show');\n      editor._input.style.top = 0;\n      editor._input.style.left = 0;\n      return;\n    }\n    editor.editedBeat = beatView;\n    beatView.setEditing(true);\n    document.body.appendChild(editor._input);\n    var bvRect = beatView._svgGroup.getBoundingClientRect();\n    var elemRect = editor._input.getBoundingClientRect();\n    var top = document.body.scrollTop + bvRect.top;\n    top -= elemRect.height + 10;\n    var left = document.body.scrollLeft + bvRect.left;\n    left += (bvRect.width * 0.5) - (elemRect.width * 0.5);\n    editor._input.classList.add('show');\n    editor._input.style.top = `${top}px`;\n    editor._input.style.left = `${left}px`;\n    \n    var measure = beatView.measureView.measure;\n    var chord = measure.getBeat(beatView.index);\n    if(chord) {\n      editor._input.value = chord;\n    } else {\n      editor._input.value = '';\n    }\n    editor._input.focus();\n    if(events) events.dispatch('Editor.setSelectedBeat');\n  };\n  \n  var toNextBeat = function(arrow) {\n    let beat = editor.editedBeat;\n    if(beat.index == beat.measureView.measure.length - 1) {\n      let newMeasure = beat.measureView.measure.getNextMeasure();\n      if(newMeasure) {\n        let newMeasureView = newMeasure.measureView;\n        let newBeat = newMeasureView.beatViews[0];\n        newBeat._svgGroup.focus();\n      } else if(!arrow) { // only do this for tab\n        editor.setSelectedBeat(null);\n        viewer._hiddenTabbable.focus();\n      }\n    } else {\n      let newBeat = beat.measureView.beatViews[beat.index + 1];\n      newBeat._svgGroup.focus();\n    }\n  };\n  \n  var toPrevBeat = function(arrow) {\n    let beat = editor.editedBeat;\n    if(beat.index == 0) {\n      let newMeasure = beat.measureView.measure.getPreviousMeasure();\n      if(newMeasure) {\n        let newMeasureView = newMeasure.measureView;\n        let newBeat = newMeasureView.beatViews[newMeasure.length - 1];\n        newBeat._svgGroup.focus();\n      } else if(!arrow) { // only do this for tab\n        editor.setSelectedBeat(null);\n        viewer._titleText.focus();\n      }\n    } else {\n      let newBeat = beat.measureView.beatViews[beat.index - 1];\n      newBeat._svgGroup.focus();\n    }\n  };\n  \n  // @todo docs\n  var handleNonTextualKeyboardInput = function(e) {\n    switch(e.key) {\n      case 'Enter':\n      case 'Escape': {\n        editor.setSelectedBeat(null);\n        break;\n      }\n      case 'ArrowRight': {\n        if(editor._input.selectionStart !== editor._input.value.length) {\n          return true;\n        }\n        toNextBeat(true);\n        break;\n      }\n      case 'Tab': {\n        if(e.shiftKey) {\n          toPrevBeat();\n        } else {\n          toNextBeat();\n        }\n        break;\n      }\n      case 'ArrowLeft': {\n        if(editor._input.selectionStart !== 0) {\n          return true;\n        }\n        toPrevBeat(true);\n        break;\n      }\n      case 'ArrowUp': {\n        let rawChord = editor._input.value;\n        let chordParts = Tonal.Chord.tokenize(rawChord);\n        chordParts[0] = Tonal.Note.enharmonic(\n          Tonal.transpose(chordParts[0], 'm2')\n        );\n        editor._input.value = chordParts.join('');\n        handleTextualKeyboardInput();\n        break;\n      }\n      case 'ArrowDown': {\n        let rawChord = editor._input.value;\n        let chordParts = Tonal.Chord.tokenize(rawChord);\n        chordParts[0] = Tonal.Note.enharmonic(\n          Tonal.transpose(chordParts[0], 'm-2')\n        );\n        editor._input.value = chordParts.join('');\n        handleTextualKeyboardInput();\n        break;\n      }\n      default: {\n        return true;\n      }\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    return false;\n  };\n  \n  var handleTextualKeyboardInput = function() {\n    var chord = editor._input.value;\n    var beat = editor.editedBeat;\n    var measure = beat.measureView.measure;\n    measure.parseChordToBeat(chord, beat.index, true);\n    editor.editedBeat.renderChord(measure.getBeat(beat.index));\n  };\n  \n  var handleBlur = function(e) {\n    if(!e.relatedTarget || (e.relatedTarget\n    && !viewer._svgElem.contains(e.relatedTarget))) {\n      editor.setSelectedBeat(null);\n    }\n  };\n  \n  editor._input = document.createElement('input');\n  editor._input.classList.add('NotochordChordEditor');\n  editor._input.setAttribute('type', 'text');\n  editor._input.addEventListener('keydown', handleNonTextualKeyboardInput);\n  editor._input.addEventListener('input', handleTextualKeyboardInput);\n  editor._input.addEventListener('blur', handleBlur);\n  \n  return editor;\n})());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/viewer/editor.js\n");

/***/ }),

/***/ "./src/viewer/resources/svg_constants.js":
/*!***********************************************!*\
  !*** ./src/viewer/resources/svg_constants.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  // https://commons.wikimedia.org/wiki/File:B%C3%A9mol.svg\n  'flat': 'm 1.380956,10.84306 -0.02557,1.68783 0,0.28131 c 0,0.56261 0.02557,1.12522 0.102293,1.68783 1.150797,-0.97178 2.378313,-2.04586 2.378313,-3.55468 0,-0.84392 -0.358026,-1.7134103 -1.09965,-1.7134103 -0.792771,0 -1.329809,0.7672 -1.355382,1.6111203 z M 0.306879,15.42067 0,0.20457992 C 0.204586,0.07671992 0.460319,-7.6580061e-8 0.690478,-7.6580061e-8 0.920637,-7.6580061e-8 1.17637,0.07669992 1.380956,0.20457992 L 1.201943,9.0273597 c 0.639331,-0.53704 1.483249,-0.8695 2.327166,-0.8695 1.329809,0 2.27602,1.22752 2.27602,2.6084803 0,2.04586 -2.1993,2.99207 -3.759269,4.32188 C 1.662261,15.42067 1.432102,16.06 0.895064,16.06 0.562612,16.06 0.306879,15.77869 0.306879,15.42067 Z',\n  'flat_height': 16.059999465942383,\n  // https://commons.wikimedia.org/wiki/File:Di%C3%A8se.svg\n  'sharp': 'm 4.6252809,-11.71096 c 0,-0.21414 -0.1713067,-0.40686 -0.38544,-0.40686 -0.2141334,0 -0.4068535,0.19272 -0.4068535,0.40686 l 0,3.1049303 -1.777307,-0.66381 0,-3.3833103 c 0,-0.21413 -0.19272,-0.40685 -0.4068534,-0.40685 -0.2141334,0 -0.3854401,0.19272 -0.3854401,0.40685 l 0,3.1049303 -0.68522678,-0.25696 c -0.0428267,-0.0214 -0.10706669,-0.0214 -0.14989337,-0.0214 C 0.19272004,-9.8265897 0,-9.6338697 0,-9.3983197 l 0,1.2847998 c 0,0.1713 0.10706669,0.34261 0.27837339,0.40685 l 0.98501351,0.34261 0,3.42614 -0.68522678,-0.23555 c -0.0428267,-0.0214 -0.10706669,-0.0214 -0.14989337,-0.0214 C 0.19272004,-4.1948799 0,-4.0021599 0,-3.7666099 l 0,1.2848 c 0,0.1713 0.10706669,0.3212 0.27837339,0.38544 l 0.98501351,0.36402 0,3.38331 c 0,0.21413 0.1713067,0.40685 0.3854401,0.40685 0.2141334,0 0.4068534,-0.19272 0.4068534,-0.40685 l 0,-3.10493 1.777307,0.66380998 0,3.38331002 c 0,0.21413 0.1927201,0.40685 0.4068535,0.40685 0.2141333,0 0.38544,-0.19272 0.38544,-0.40685 l 0,-3.10494002 0.6852268,0.25696 c 0.042827,0.0214 0.1070667,0.0214 0.1498934,0.0214 0.2355467,0 0.4282668,-0.19272 0.4282668,-0.42827 l 0,-1.28479998 c 0,-0.17131 -0.1070667,-0.34261 -0.2783734,-0.40685 l -0.9850136,-0.34262 0,-3.42613 0.6852268,0.23554 c 0.042827,0.0214 0.1070667,0.0214 0.1498934,0.0214 0.2355467,0 0.4282668,-0.19272 0.4282668,-0.42827 l 0,-1.2848 c 0,-0.17131 -0.1070667,-0.3212 -0.2783734,-0.38544 l -0.9850136,-0.36403 0,-3.3833001 z m -2.5696005,8.0728301 0,-3.42614 1.777307,0.6424 0,3.42614 z',\n  'sharp_height': 16.059999465942383,\n  'bar': 'M 0,0 0,100',\n  'bar_height': 100,\n  'delta_char': '\\u0394',\n  'oslash_char': '\\u00F8',\n  'slabo27px_H_height_ratio': 33.33 / 50\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld2VyL3Jlc291cmNlcy9zdmdfY29uc3RhbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdlci9yZXNvdXJjZXMvc3ZnX2NvbnN0YW50cy5qcz8yZTVjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgLy8gaHR0cHM6Ly9jb21tb25zLndpa2ltZWRpYS5vcmcvd2lraS9GaWxlOkIlQzMlQTltb2wuc3ZnXG4gICdmbGF0JzogJ20gMS4zODA5NTYsMTAuODQzMDYgLTAuMDI1NTcsMS42ODc4MyAwLDAuMjgxMzEgYyAwLDAuNTYyNjEgMC4wMjU1NywxLjEyNTIyIDAuMTAyMjkzLDEuNjg3ODMgMS4xNTA3OTcsLTAuOTcxNzggMi4zNzgzMTMsLTIuMDQ1ODYgMi4zNzgzMTMsLTMuNTU0NjggMCwtMC44NDM5MiAtMC4zNTgwMjYsLTEuNzEzNDEwMyAtMS4wOTk2NSwtMS43MTM0MTAzIC0wLjc5Mjc3MSwwIC0xLjMyOTgwOSwwLjc2NzIgLTEuMzU1MzgyLDEuNjExMTIwMyB6IE0gMC4zMDY4NzksMTUuNDIwNjcgMCwwLjIwNDU3OTkyIEMgMC4yMDQ1ODYsMC4wNzY3MTk5MiAwLjQ2MDMxOSwtNy42NTgwMDYxZS04IDAuNjkwNDc4LC03LjY1ODAwNjFlLTggMC45MjA2MzcsLTcuNjU4MDA2MWUtOCAxLjE3NjM3LDAuMDc2Njk5OTIgMS4zODA5NTYsMC4yMDQ1Nzk5MiBMIDEuMjAxOTQzLDkuMDI3MzU5NyBjIDAuNjM5MzMxLC0wLjUzNzA0IDEuNDgzMjQ5LC0wLjg2OTUgMi4zMjcxNjYsLTAuODY5NSAxLjMyOTgwOSwwIDIuMjc2MDIsMS4yMjc1MiAyLjI3NjAyLDIuNjA4NDgwMyAwLDIuMDQ1ODYgLTIuMTk5MywyLjk5MjA3IC0zLjc1OTI2OSw0LjMyMTg4IEMgMS42NjIyNjEsMTUuNDIwNjcgMS40MzIxMDIsMTYuMDYgMC44OTUwNjQsMTYuMDYgMC41NjI2MTIsMTYuMDYgMC4zMDY4NzksMTUuNzc4NjkgMC4zMDY4NzksMTUuNDIwNjcgWicsXG4gICdmbGF0X2hlaWdodCc6IDE2LjA1OTk5OTQ2NTk0MjM4MyxcbiAgLy8gaHR0cHM6Ly9jb21tb25zLndpa2ltZWRpYS5vcmcvd2lraS9GaWxlOkRpJUMzJUE4c2Uuc3ZnXG4gICdzaGFycCc6ICdtIDQuNjI1MjgwOSwtMTEuNzEwOTYgYyAwLC0wLjIxNDE0IC0wLjE3MTMwNjcsLTAuNDA2ODYgLTAuMzg1NDQsLTAuNDA2ODYgLTAuMjE0MTMzNCwwIC0wLjQwNjg1MzUsMC4xOTI3MiAtMC40MDY4NTM1LDAuNDA2ODYgbCAwLDMuMTA0OTMwMyAtMS43NzczMDcsLTAuNjYzODEgMCwtMy4zODMzMTAzIGMgMCwtMC4yMTQxMyAtMC4xOTI3MiwtMC40MDY4NSAtMC40MDY4NTM0LC0wLjQwNjg1IC0wLjIxNDEzMzQsMCAtMC4zODU0NDAxLDAuMTkyNzIgLTAuMzg1NDQwMSwwLjQwNjg1IGwgMCwzLjEwNDkzMDMgLTAuNjg1MjI2NzgsLTAuMjU2OTYgYyAtMC4wNDI4MjY3LC0wLjAyMTQgLTAuMTA3MDY2NjksLTAuMDIxNCAtMC4xNDk4OTMzNywtMC4wMjE0IEMgMC4xOTI3MjAwNCwtOS44MjY1ODk3IDAsLTkuNjMzODY5NyAwLC05LjM5ODMxOTcgbCAwLDEuMjg0Nzk5OCBjIDAsMC4xNzEzIDAuMTA3MDY2NjksMC4zNDI2MSAwLjI3ODM3MzM5LDAuNDA2ODUgbCAwLjk4NTAxMzUxLDAuMzQyNjEgMCwzLjQyNjE0IC0wLjY4NTIyNjc4LC0wLjIzNTU1IGMgLTAuMDQyODI2NywtMC4wMjE0IC0wLjEwNzA2NjY5LC0wLjAyMTQgLTAuMTQ5ODkzMzcsLTAuMDIxNCBDIDAuMTkyNzIwMDQsLTQuMTk0ODc5OSAwLC00LjAwMjE1OTkgMCwtMy43NjY2MDk5IGwgMCwxLjI4NDggYyAwLDAuMTcxMyAwLjEwNzA2NjY5LDAuMzIxMiAwLjI3ODM3MzM5LDAuMzg1NDQgbCAwLjk4NTAxMzUxLDAuMzY0MDIgMCwzLjM4MzMxIGMgMCwwLjIxNDEzIDAuMTcxMzA2NywwLjQwNjg1IDAuMzg1NDQwMSwwLjQwNjg1IDAuMjE0MTMzNCwwIDAuNDA2ODUzNCwtMC4xOTI3MiAwLjQwNjg1MzQsLTAuNDA2ODUgbCAwLC0zLjEwNDkzIDEuNzc3MzA3LDAuNjYzODA5OTggMCwzLjM4MzMxMDAyIGMgMCwwLjIxNDEzIDAuMTkyNzIwMSwwLjQwNjg1IDAuNDA2ODUzNSwwLjQwNjg1IDAuMjE0MTMzMywwIDAuMzg1NDQsLTAuMTkyNzIgMC4zODU0NCwtMC40MDY4NSBsIDAsLTMuMTA0OTQwMDIgMC42ODUyMjY4LDAuMjU2OTYgYyAwLjA0MjgyNywwLjAyMTQgMC4xMDcwNjY3LDAuMDIxNCAwLjE0OTg5MzQsMC4wMjE0IDAuMjM1NTQ2NywwIDAuNDI4MjY2OCwtMC4xOTI3MiAwLjQyODI2NjgsLTAuNDI4MjcgbCAwLC0xLjI4NDc5OTk4IGMgMCwtMC4xNzEzMSAtMC4xMDcwNjY3LC0wLjM0MjYxIC0wLjI3ODM3MzQsLTAuNDA2ODUgbCAtMC45ODUwMTM2LC0wLjM0MjYyIDAsLTMuNDI2MTMgMC42ODUyMjY4LDAuMjM1NTQgYyAwLjA0MjgyNywwLjAyMTQgMC4xMDcwNjY3LDAuMDIxNCAwLjE0OTg5MzQsMC4wMjE0IDAuMjM1NTQ2NywwIDAuNDI4MjY2OCwtMC4xOTI3MiAwLjQyODI2NjgsLTAuNDI4MjcgbCAwLC0xLjI4NDggYyAwLC0wLjE3MTMxIC0wLjEwNzA2NjcsLTAuMzIxMiAtMC4yNzgzNzM0LC0wLjM4NTQ0IGwgLTAuOTg1MDEzNiwtMC4zNjQwMyAwLC0zLjM4MzMwMDEgeiBtIC0yLjU2OTYwMDUsOC4wNzI4MzAxIDAsLTMuNDI2MTQgMS43NzczMDcsMC42NDI0IDAsMy40MjYxNCB6JyxcbiAgJ3NoYXJwX2hlaWdodCc6IDE2LjA1OTk5OTQ2NTk0MjM4MyxcbiAgJ2Jhcic6ICdNIDAsMCAwLDEwMCcsXG4gICdiYXJfaGVpZ2h0JzogMTAwLFxuICAnZGVsdGFfY2hhcic6ICdcXHUwMzk0JyxcbiAgJ29zbGFzaF9jaGFyJzogJ1xcdTAwRjgnLFxuICAnc2xhYm8yN3B4X0hfaGVpZ2h0X3JhdGlvJzogMzMuMzMgLyA1MFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/viewer/resources/svg_constants.js\n");

/***/ }),

/***/ "./src/viewer/viewer.css.js":
/*!**********************************!*\
  !*** ./src/viewer/viewer.css.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* eslint-disable max-len */\nmodule.exports = `/*<![CDATA[*/\n@import url(\"https://fonts.googleapis.com/css?family=Slabo+27px&subset=latin-ext\");\n.NotochordSVGElement {\n  font-family: 'Slabo 27px', serif;\n  dominant-baseline: hanging; }\n\n.NotochordPlayedBeat path, .NotochordPlayedBeat text {\n  fill: lightblue; }\n\nsvg.NotochordEditable g.NotochordBeatView .NotochordBeatViewBackground {\n  fill: transparent; }\n\nsvg.NotochordEditable g.NotochordBeatView:hover .NotochordBeatViewBackground {\n  fill: #eef4f6; }\n\nsvg.NotochordEditable g.NotochordBeatView.NotochordBeatViewEditing .NotochordBeatViewBackground {\n  fill: #d8ecf3; }\n\n.NotochordChordEditor {\n  position: absolute;\n  visibility: hidden;\n  transform: translateY(10px);\n  opacity: 0;\n  transition: transform .4s, opacity .4s;\n  padding: 4px;\n  box-sizing: border-box;\n  border-radius: 5px;\n  width: 6em;\n  text-align: center;\n  outline: none !important;\n  border: 3px solid #d8ecf3;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);\n  font-weight: 500; }\n  .NotochordChordEditor.show {\n    visibility: visible;\n    transform: translateY(0);\n    opacity: 1; }\n\n/*]]>*/`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld2VyL3ZpZXdlci5jc3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmlld2VyL3ZpZXdlci5jc3MuanM/ZGE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5tb2R1bGUuZXhwb3J0cyA9IGAvKjwhW0NEQVRBWyovXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1TbGFibysyN3B4JnN1YnNldD1sYXRpbi1leHRcIik7XG4uTm90b2Nob3JkU1ZHRWxlbWVudCB7XG4gIGZvbnQtZmFtaWx5OiAnU2xhYm8gMjdweCcsIHNlcmlmO1xuICBkb21pbmFudC1iYXNlbGluZTogaGFuZ2luZzsgfVxuXG4uTm90b2Nob3JkUGxheWVkQmVhdCBwYXRoLCAuTm90b2Nob3JkUGxheWVkQmVhdCB0ZXh0IHtcbiAgZmlsbDogbGlnaHRibHVlOyB9XG5cbnN2Zy5Ob3RvY2hvcmRFZGl0YWJsZSBnLk5vdG9jaG9yZEJlYXRWaWV3IC5Ob3RvY2hvcmRCZWF0Vmlld0JhY2tncm91bmQge1xuICBmaWxsOiB0cmFuc3BhcmVudDsgfVxuXG5zdmcuTm90b2Nob3JkRWRpdGFibGUgZy5Ob3RvY2hvcmRCZWF0Vmlldzpob3ZlciAuTm90b2Nob3JkQmVhdFZpZXdCYWNrZ3JvdW5kIHtcbiAgZmlsbDogI2VlZjRmNjsgfVxuXG5zdmcuTm90b2Nob3JkRWRpdGFibGUgZy5Ob3RvY2hvcmRCZWF0Vmlldy5Ob3RvY2hvcmRCZWF0Vmlld0VkaXRpbmcgLk5vdG9jaG9yZEJlYXRWaWV3QmFja2dyb3VuZCB7XG4gIGZpbGw6ICNkOGVjZjM7IH1cblxuLk5vdG9jaG9yZENob3JkRWRpdG9yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMHB4KTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC40cywgb3BhY2l0eSAuNHM7XG4gIHBhZGRpbmc6IDRweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB3aWR0aDogNmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAzcHggc29saWQgI2Q4ZWNmMztcbiAgYm94LXNoYWRvdzogMCAxcHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBmb250LXdlaWdodDogNTAwOyB9XG4gIC5Ob3RvY2hvcmRDaG9yZEVkaXRvci5zaG93IHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi8qXV0+Ki9gOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/viewer/viewer.css.js\n");

/***/ }),

/***/ "./src/viewer/viewer.js":
/*!******************************!*\
  !*** ./src/viewer/viewer.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _resources_svg_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources/svg_constants.js */ \"./src/viewer/resources/svg_constants.js\");\n/* harmony import */ var _editor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editor.js */ \"./src/viewer/editor.js\");\n/* harmony import */ var _viewer_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewer.css.js */ \"./src/viewer/viewer.css.js\");\n/* harmony import */ var _viewer_css_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_viewer_css_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _MeasureView_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MeasureView.js */ \"./src/viewer/MeasureView.js\");\n/* harmony import */ var _BeatView_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BeatView.js */ \"./src/viewer/BeatView.js\");\n\n\n\n\n\n\n/*\n* Code to generate a viewer object, which displays a song and optionally\n* provides an interface for editing it.\n*/\n/* harmony default export */ __webpack_exports__[\"default\"] = ((function() {\n  // Attach everything public to this object, which is returned at the end.\n  var viewer = {};\n  \n  /**\n   * When generating SVG-related elements in JS, they must be namespaced.\n   * @type {String}\n   * @const\n   */\n  viewer.SVG_NS = 'http://www.w3.org/2000/svg';\n  \n  /**\n   * Path data for various shapes.\n   * @type {String[]}\n   * @const\n   */\n  viewer.PATHS = _resources_svg_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  \n  /**\n   * The SVG element with which the user will interact.\n   * @type {SVGDocument}\n   * @private\n   */\n  viewer._svgElem = document.createElementNS(viewer.SVG_NS, 'svg');\n  viewer._svgElem.classList.add('NotochordSVGElement');\n  \n  viewer.editor = _editor_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n  viewer.editor.attachViewer(viewer);\n  \n  // fill up the svg with various things in a specific order.\n  var style = document.createElementNS(viewer.SVG_NS, 'style');\n  style.setAttributeNS(null, 'type', 'text/css');\n  style.appendChild(document.createTextNode(_viewer_css_js__WEBPACK_IMPORTED_MODULE_2___default.a));\n  viewer._svgElem.appendChild(style);\n  viewer._titleText = document.createElementNS(viewer.SVG_NS, 'text');\n  viewer._titleText.setAttributeNS(null, 'tabindex', 0);\n  viewer._svgElem.appendChild(viewer._titleText);\n  var composerText = document.createElementNS(viewer.SVG_NS, 'text');\n  viewer._svgElem.appendChild(composerText);\n  viewer._measureGroup = document.createElementNS(viewer.SVG_NS, 'g');\n  viewer._svgElem.appendChild(viewer._measureGroup);\n  viewer._hiddenTabbable = document.createElementNS(viewer.SVG_NS, 'g');\n  viewer._hiddenTabbable.setAttributeNS(null, 'tabindex', 0);\n  viewer._svgElem.appendChild(viewer._hiddenTabbable);\n  \n  viewer.globals = {\n    cols: 4,\n    measureWidth: 237,\n    rowHeight: 60,\n    measureXPadding: 18.96,\n    beatWidth: 54.51,\n    H_HEIGHT: 33.33,\n    topPadding:13.335\n  };\n  viewer.width = 1400;\n  viewer.editable = false;\n  viewer.fontSize = 50;\n  viewer.scaleDegrees = false;\n  var topMargin, rowYMargin, innerWidth = viewer.width - 2;\n  \n  /**\n   * Configure the viewer\n   * @param {Object} [options] Optional: options for the Viewer.\n   * @param {Number} [options.width] SVG width.\n   * @param {Boolean} [options.editable] Whether the viewer is editable.\n   * @param {Number} [options.fontSize] Font size for big text (smaller\n   * text will be relatively scaled).\n   * @param {Boolean} [options.scaleDegrees] Whether to display in scale-\n   * degree (Roman numeral) notation.\n   */\n  viewer.config = function(options) { // @todo do player.config like this too.\n    if(options) {\n      if(options['width']) {\n        viewer.width = options['width'];\n        innerWidth = viewer.width - 2;\n      }\n      if(options['editable'] !== undefined) {\n        viewer.editor.setEditable(options['editable']);\n      }\n      if(options['fontSize']) viewer.fontSize = options['fontSize'];\n      if(options['scaleDegrees'] !== undefined) {\n        viewer.scaleDegrees = options['scaleDegrees'];\n        // Hacky, but I can't think of what'd be better semantically.\n        events && events.dispatch('Viewer.setScaleDegrees', {});\n      }\n    }\n    \n    viewer.rowHeight = 1.2 * viewer.fontSize;\n    \n    // The space left at the top for the title and stuff\n    topMargin = 1.5 * viewer.rowHeight;\n    // Vertical space between rows.\n    rowYMargin = 0.3 * viewer.rowHeight;\n    \n    // SVG width for each measure.\n    // @todo: shorten to 2 if the width/fontsize ratio is ridiculous?\n    viewer.globals.measureWidth = innerWidth / viewer.globals.cols;\n    viewer.globals.measureXPadding = viewer.globals.measureWidth * .08;\n    var measureInnerWidth = viewer.globals.measureWidth\n      - viewer.globals.measureXPadding;\n    // SVG distance between beats in a measure.\n    viewer.globals.beatWidth = measureInnerWidth / viewer.globals.cols;\n    \n    viewer.globals.H_HEIGHT = viewer.fontSize\n      * viewer.PATHS.slabo27px_H_height_ratio;\n    viewer.globals.topPadding = 0.5\n      * (viewer.rowHeight - viewer.globals.H_HEIGHT);\n    \n    viewer._svgElem.setAttributeNS(null, 'width', viewer.width);\n    viewer._svgElem.style.fontSize = viewer.fontSize;\n    if(reflow) reflow();\n  };\n  \n  var events = null;\n  /**\n   * Attach events object so viewer module can communicate with the others.\n   * @param {Object} ev Notochord events system.\n   */\n  viewer.attachEvents = function(ev) {\n    events = ev;\n    events.create('Viewer.setBeatEditing');\n    events.create('Viewer.setScaleDegrees');\n    events.on('Notochord.load', viewer.renderSong);\n    viewer.editor.attachEvents(events);\n  };\n  \n  var song = null;\n  /**\n   * Load a song.\n   * @param {Song} _song Song to load.\n   * @public\n   */\n  viewer.loadSong = function(_song) {\n    song = _song;\n  };\n  \n  /**\n   * Append viewer's SVG element to a parent element.\n   * @param {HTMLElement} parent The element to append the SVG element.\n   * @public\n   */\n  viewer.appendTo = function(parent) {\n    parent.appendChild(viewer._svgElem);\n  };\n  \n  // for extensibility.\n  viewer.MeasureView = _MeasureView_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n  viewer.BeatView = _BeatView_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n  \n  /**\n   * Called by Notochord to create a MeasureView for a Measure and link them.\n   * @param {Measure} measure The corresponding Measure.\n   * @private\n   */\n  var createMeasureView = function(measure) {\n    if(!measure) return;\n    new viewer.MeasureView(events, viewer, measure);\n  };\n  \n  /**\n   * Render the songs title and composer.\n   * @private\n   */\n  var setTitleAndComposer = function() {\n    viewer._titleText.appendChild(document.createTextNode(song.title));\n    var titleBB = viewer._titleText.getBBox();\n    var ttscale = 0.7;\n    var ttx = (viewer.width - (titleBB.width * ttscale)) / 2;\n    viewer._titleText.setAttributeNS(\n      null,\n      'transform',\n      `translate(${ttx}, 0) scale(${ttscale})`\n    );\n    \n    composerText.appendChild(document.createTextNode(song.composer));\n    var composerBB = composerText.getBBox();\n    var ctscale = 0.5;\n    var ctx = (viewer.width - (composerBB.width * ctscale)) / 2;\n    var cty = (viewer.globals.H_HEIGHT * ttscale)\n      + (viewer.globals.H_HEIGHT * ctscale);\n    composerText.setAttributeNS(\n      null,\n      'transform',\n      `translate(${ctx}, ${cty}) scale(${ctscale})`\n    );\n  };\n  \n  /**\n   * Layout measures and newlines in the SVG.\n   * @private\n   */\n  var reflow = function() {\n    if(!song) {\n      viewer._svgElem.setAttributeNS(null, 'height', 0);\n      return;\n    }\n    var xoffset = 1;\n    var row = 0;\n    var col = 0;\n    var y;\n    for(let measure of song.measures) {\n      let x = xoffset + (viewer.globals.measureWidth * col);\n      if(x + viewer.globals.measureWidth\n        > (innerWidth + viewer.globals.beatWidth)\n        || measure === null) {\n        x = xoffset;\n        col = 0;\n        row++;\n        if(measure === null) continue;\n      }\n      y = topMargin + ((viewer.rowHeight + rowYMargin) * row);\n      if(!measure.measureView) return;\n      measure.measureView.setPosition(x, y, col);\n      col++;\n    }\n    viewer.height = y + rowYMargin + viewer.rowHeight;\n    viewer._svgElem.setAttributeNS(null, 'height', viewer.height);\n  };\n  \n  /**\n   * Renders the song to the SVG. Runs automatically when a song loads.\n   * @public\n   */\n  viewer.renderSong = function() {\n    // remove previous measure/beat views?\n    for(let measure of song.measures) {\n      createMeasureView(measure);\n    }\n    setTitleAndComposer(song);\n    reflow();\n  };\n  \n  return viewer;\n})());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/viewer/viewer.js\n");

/***/ })

/******/ });